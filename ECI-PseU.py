#!/usr/bin/env python
# -*- coding:utf-8-*-
# auther:kewei Liu time:2019/3/25 15:11  QQ:422209303  e-mail:Liukeweiaway@hotmail.com
# --------------------------------------------------------------------------
import getopt
import sys
from joblib import load
import pandas as pd


def set_dict(inputfile):
    n_s_dict = {}
    with open(inputfile) as f:
        data = f.readlines()
    list1 = data[1::2]
    list1 = [k.strip() for k in list1]
    if '>' not in list1:
        print('Please enter the correct format reference README, or type in -h for help')
    names = data[0::2]
    names = [k[1:].strip() for k in names]
    for i in range(len(names)):
        n_s_dict[names[i]] = list1[i]
    return n_s_dict


def prediction_pseudourdine_human(name, sequence):
    word1 = '       The U site at position '
    word2 = ' is pseudouridine!'
    PNlist = [[0.026, -0.056, -0.004, -0.024, -0.038, -0.004, -0.043, 0.008, -0.077, -0.105, 0.0, 0.103, -0.065, -0.024, -0.026, -0.028, -0.014, -0.062, -0.051, -0.054, -0.021],[-0.08, -0.01, -0.01, 0.006, 0.055, -0.081, -0.012, -0.053, -0.012, 0.074, 0.0, 0.087, 0.014, -0.059,-0.012, 0.021, -0.041, -0.037, -0.039, 0.002, 0.008],[0.006, 0.032, -0.016, 0.034, -0.004, 0.022, 0.049, 0.028, 0.01, -0.012, 0.0, -0.059, 0.089, 0.022, 0.016,-0.002, 0.049, 0.047, 0.041, 0.074, 0.032],[0.049, 0.035, 0.03, -0.016, -0.012, 0.063, 0.007, 0.017, 0.079, 0.042, 0.0, -0.132, -0.038, 0.061, 0.023,0.01, 0.006, 0.053, 0.049, -0.022, -0.021]]
    # ------------------------------------------------------------
    PDNlist = [[-0.002, -0.01, 0.016, -0.018, -0.02, -0.02, -0.02, -0.042, -0.048, 0.0, 0.0, 0.008, -0.038, -0.024, 0.002,-0.012, -0.006, -0.036, -0.032, -0.044],[-0.004, -0.032, 0.006, 0.008, -0.031, 0.008, -0.019, 0.0, -0.015, -0.105, 0.0, 0.03, -0.019, -0.02, 0.008,-0.024, -0.006, -0.022, -0.021, -0.008],[0.002, -0.027, -0.002, 0.0, -0.005, 0.0, -0.011, 0.022, 0.002, 0.0, 0.0, 0.057, -0.002, 0.018, -0.012, 0.022,-0.004, -0.004, 0.006, -0.006],[0.03, 0.012, -0.024, -0.014, 0.016, 0.008, 0.006, 0.028, -0.017, 0.0, 0.0, 0.008, -0.006, 0.002, -0.025,-0.014, 0.002, 0.0, -0.004, 0.004],[-0.022, -0.005, -0.039, 0.0, 0.004, -0.024, 0.019, 0.009, -0.027, 0.0, 0.103, 0.014, -0.01, -0.017, -0.016,-0.005, -0.031, -0.029, -0.004, 0.012],[-0.032, -0.004, 0.006, 0.028, -0.014, -0.02, -0.026, -0.024, -0.01, 0.074, 0.087, 0.014, -0.006, -0.028, 0.002, -0.024, -0.016, -0.032, -0.012, -0.002],[-0.013, -0.004, 0.025, -0.025, 0.021, -0.023, 0.002, -0.029, -0.021, 0.0, -0.059, 0.076, 0.014, -0.023, -0.008,0.031, -0.009, 0.01, -0.006, -0.002],[-0.014, 0.002, -0.002, 0.002, 0.044, -0.014, -0.006, -0.008, 0.044, 0.0, -0.132, -0.018, 0.016, 0.008, 0.01,0.018, 0.014, 0.014, -0.016, -0.006],[-0.037, 0.006, -0.016, -0.018, 0.012, -0.01, 0.008, -0.027, -0.019, 0.0, 0.0, -0.043, 0.04, -0.004, -0.02,-0.008, -0.024, 0.022, -0.01, 0.017],[0.004, 0.01, 0.002, 0.04, -0.025, -0.024, 0.008, 0.006, 0.018, -0.012, 0.0, -0.005, -0.008, 0.02, 0.002, 0.002,-0.006, -0.006, -0.002, 0.032],[0.025, -0.004, -0.022, 0.002, -0.002, 0.024, 0.022, 0.013, -0.006, 0.0, 0.0, -0.027, 0.014, -0.008, 0.021,-0.006, 0.047, 0.01, 0.029, 0.016],[0.014, 0.02, 0.02, 0.01, 0.01, 0.032, 0.01, 0.036, 0.016, 0.0, 0.0, 0.014, 0.042, 0.014, 0.014, 0.01, 0.032,0.02, 0.024, 0.01],[0.004, 0.004, 0.014, -0.002, 0.0, 0.012, 0.002, -0.017, -0.012, 0.0, 0.0, -0.045, -0.016, 0.018, 0.006, 0.01,-0.002, -0.008, -0.008, -0.004],[0.023, 0.016, -0.008, -0.023, -0.012, 0.025, -0.017, 0.006, 0.081, 0.042, 0.0, -0.027, -0.027, 0.016, 0.009,0.006, -0.008, 0.023, 0.037, -0.014],[0.019, 0.019, 0.035, 0.019, 0.008, 0.047, 0.015, 0.005, 0.012, 0.0, 0.0, -0.018, -0.004, 0.029, -0.002, 0.003,0.012, 0.025, 0.047, 0.025],[0.004, -0.004, -0.01, -0.01, -0.008, -0.02, 0.006, 0.022, -0.002, 0.0, 0.0, -0.043, 0.008, -0.002, 0.01,-0.009, 0.004, 0.014, -0.027, -0.028]]
    # -------------------------------------------------------------
    PTNlist = [
        [-0.002, 0.004, 0.008, -0.015, 0.0, -0.008, -0.012, -0.012, 0.0, 0.0, 0.0, -0.016, -0.01, -0.016, 0.002, 0.0,
         -0.018, -0.024, -0.039],
        [0.009, 0.004, 0.041, -0.036, -0.004, -0.028, 0.0, -0.012, -0.097, 0.0, 0.0, 0.004, -0.024, 0.02, -0.008,
         -0.033, -0.004, -0.008, 0.004],
        [-0.012, -0.028, -0.012, -0.016, -0.008, 0.004, -0.008, -0.016, 0.0, 0.0, 0.0, 0.0, -0.024, -0.021,
         0.016, 0.004, -0.013, -0.008, 0.004],
        [0.004, -0.004, -0.012, 0.045, -0.029, 0.0, -0.009, -0.032, 0.0, 0.0, 0.0, 0.045, -0.008, -0.017, -0.008,
         0.004, 0.041, -0.008, 0.004],
        [0.0, -0.041, 0.012, -0.024, -0.02, 0.016, -0.016, -0.004, 0.0, -0.057, 0.0, -0.012, -0.024, -0.02,
         -0.012, -0.016, -0.008, -0.02, 0.012],
        [0.0, -0.02, 0.024, -0.012, -0.02, 0.0, -0.004, -0.005, -0.028, 0.016, 0.0, 0.033, -0.008, -0.021,
         -0.008, -0.029, -0.012, -0.012, -0.053],
        [0.004, 0.004, 0.004, 0.008, -0.02, -0.012, -0.012, -0.004, 0.0, -0.073, 0.0, 0.029, -0.004, -0.024,
         0.037, -0.008, 0.016, -0.004, 0.008],
        [-0.012, -0.009, -0.029, 0.045, 0.0, 0.012, -0.004, 0.012, 0.0, -0.097, 0.0, 0.012, 0.0, 0.024, 0.0,
         0.004, -0.008, -0.008, -0.008],
        [0.004, -0.008, -0.011, -0.02, -0.011, -0.017, -0.033, -0.023, 0.0, 0.0, 0.0, 0.018, -0.015, -0.025,
         0.002, -0.004, -0.017, -0.017, -0.041],
        [-0.008, -0.012, 0.014, 0.0, -0.004, -0.002, -0.006, 0.026, 0.002, 0.0, 0.0, -0.006, 0.008, 0.006,
         -0.008, 0.0, 0.0, -0.008, 0.006],
        [-0.002, -0.008, 0.0, 0.004, 0.01, 0.01, 0.004, -0.002, 0.0, 0.0, 0.0, 0.022, -0.01, 0.018, -0.002, 0.01,
         -0.004, -0.006, 0.006],
        [0.006, 0.006, 0.002, 0.002, 0.0, 0.0, 0.012, 0.008, 0.0, 0.0, 0.0, 0.006, 0.004, 0.002, -0.002, 0.016,
         -0.002, 0.002, -0.004],
        [0.01, 0.008, -0.012, -0.002, -0.002, 0.002, -0.004, -0.008, 0.0, 0.0, 0.0, -0.006, -0.008, -0.012,
         -0.004, -0.01, 0.0, -0.008, -0.002],
        [0.012, -0.008, 0.0, 0.0, 0.0, 0.0, 0.002, 0.036, -0.017, 0.0, 0.0, 0.004, 0.004, 0.01, 0.0, -0.002,
         -0.002, 0.018,
         0.002],
        [-0.002, 0.016, -0.002, 0.004, 0.026, 0.008, -0.012, 0.002, 0.0, 0.0, 0.0, 0.002, 0.006, 0.004, -0.02,
         -0.008,
         0.004, 0.006, 0.004],
        [0.01, -0.004, -0.01, -0.016, -0.008, -0.002, 0.02, -0.002, 0.0, 0.0, 0.0, 0.008, -0.008, 0.0, 0.0,
         0.006, 0.0,
         -0.016, -0.008],
        [-0.018, 0.004, -0.018, 0.004, -0.008, -0.01, 0.0, -0.006, 0.0, 0.0, 0.008, 0.004, -0.012, -0.006,
         -0.012, -0.006,
         -0.004, -0.01, 0.0],
        [-0.016, 0.004, -0.033, -0.004, 0.02, -0.016, 0.012, 0.016, -0.052, 0.0, 0.061, -0.004, -0.025, 0.0,
         -0.033, 0.012,
         -0.024, -0.032, -0.02],
        [0.004, -0.004, 0.0, 0.012, -0.004, -0.004, 0.02, 0.012, 0.0, 0.0, 0.113, 0.012, 0.032, -0.008, 0.032,
         0.0, -0.008,
         -0.004, -0.004],
        [0.004, -0.016, -0.008, -0.016, 0.008, -0.008, 0.004, 0.0, 0.0, 0.0, 0.016, 0.012, -0.004, -0.012,
         -0.008, -0.008,
         -0.02, 0.0, 0.016],
        [-0.024, -0.02, 0.012, 0.012, -0.004, 0.016, 0.012, -0.036, 0.0, 0.097, 0.028, 0.004, -0.012, -0.029,
         0.008,
         -0.036, -0.012, 0.008, 0.0],
        [-0.02, 0.0, 0.008, 0.0, -0.004, -0.033, -0.024, -0.016, -0.02, 0.077, 0.028, -0.024, 0.004, 0.004,
         -0.012, 0.0,
         -0.036, 0.012, 0.016],
        [-0.016, 0.013, -0.012, 0.016, -0.012, 0.012, -0.024, -0.004, 0.0, 0.028, 0.154, -0.004, -0.024, 0.004,
         -0.004,
         -0.017, 0.02, -0.041, -0.021],
        [-0.004, 0.0, 0.004, 0.028, -0.008, -0.037, -0.016, 0.008, 0.0, -0.052, -0.037, 0.053, 0.02, -0.037,
         0.012, 0.004,
         -0.004, -0.045, -0.02],
        [-0.018, 0.004, -0.019, 0.014, 0.0, -0.016, -0.002, -0.018, 0.0, 0.0, -0.035, 0.031, -0.006, -0.014,
         -0.018,
         -0.018, -0.008, -0.018, 0.002],
        [-0.008, -0.004, 0.01, -0.026, 0.004, -0.01, 0.0, -0.004, -0.021, 0.0, -0.005, 0.016, 0.008, -0.002, 0.0,
         0.01,
         -0.008, -0.004, -0.008],
        [-0.004, -0.002, 0.006, -0.012, 0.002, -0.004, 0.0, -0.01, 0.0, 0.0, -0.027, 0.008, 0.0, -0.016, -0.004,
         0.032,
         -0.004, 0.014, -0.004],
        [0.0, 0.002, 0.008, 0.004, 0.006, -0.002, 0.004, -0.002, 0.0, 0.0, 0.014, 0.026, 0.0, 0.004, 0.002, 0.0,
         0.008,
         0.008, 0.004],
        [-0.01, 0.002, -0.006, 0.002, 0.012, 0.002, -0.008, -0.014, 0.0, 0.0, -0.045, -0.006, 0.008, 0.004,
         0.014, 0.008,
         0.006, -0.01, 0.008],
        [-0.004, -0.002, -0.008, -0.004, 0.01, -0.008, -0.008, 0.002, 0.044, 0.0, -0.027, -0.02, -0.008, 0.0,
         -0.002,
         0.002, 0.002, 0.004, -0.014],
        [0.01, 0.008, 0.008, -0.004, 0.018, -0.008, 0.008, 0.002, 0.0, 0.0, -0.018, -0.004, 0.03, -0.002, 0.004,
         0.012,
         0.01, 0.02, 0.008],
        [-0.01, -0.006, 0.004, 0.008, 0.004, 0.0, 0.002, 0.002, 0.0, 0.0, -0.043, 0.012, -0.014, 0.006, -0.006,
         -0.004,
         -0.004, 0.0, -0.018],
        [-0.002, -0.002, -0.002, -0.006, -0.008, -0.01, -0.016, -0.016, 0.0, 0.0, 0.0, -0.012, 0.016, 0.004,
         -0.002, 0.0,
         -0.012, -0.002, 0.004],
        [-0.028, 0.0, 0.016, -0.004, -0.004, 0.008, 0.0, -0.02, -0.036, 0.0, 0.0, -0.024, 0.004, -0.012, -0.016,
         -0.012,
         -0.004, 0.008, 0.012],
        [-0.036, 0.02, -0.012, 0.0, 0.008, -0.02, 0.029, 0.012, 0.0, 0.0, 0.0, -0.016, 0.025, 0.008, -0.024,
         -0.02, 0.016,
         0.028, -0.033],
        [-0.004, -0.004, -0.033, -0.021, 0.037, 0.012, 0.021, -0.012, 0.0, 0.0, 0.0, -0.02, 0.021, -0.012, 0.004,
         0.016,
         -0.037, 0.013, -0.008],
        [0.02, -0.008, -0.004, 0.012, -0.016, -0.02, 0.024, -0.028, 0.0, 0.045, 0.0, 0.008, 0.008, 0.037, 0.0,
         -0.012,
         -0.012, 0.0, -0.012],
        [0.008, 0.016, 0.016, 0.016, -0.012, -0.02, -0.012, 0.012, 0.037, 0.057, 0.0, -0.02, -0.016, 0.02,
         -0.024, -0.008,
         -0.004, -0.037, 0.008],
        [-0.012, 0.012, -0.024, 0.024, -0.02, -0.008, 0.008, -0.02, 0.0, -0.061, 0.0, 0.008, 0.0, -0.024, 0.016,
         0.016,
         -0.012, 0.02, 0.0],
        [-0.008, 0.0, 0.017, 0.029, 0.0, 0.0, -0.004, 0.049, 0.0, -0.064, 0.0, -0.004, -0.008, 0.008, 0.012,
         0.009, 0.017,
         0.004, 0.0],
        [-0.002, -0.002, -0.008, -0.004, -0.012, -0.006, -0.021, -0.014, 0.0, 0.0, 0.0, -0.021, 0.006, -0.002,
         -0.002,
         -0.012, 0.014, -0.008, 0.0],
        [0.016, 0.004, 0.0, -0.004, -0.018, 0.012, 0.014, 0.0, -0.006, 0.0, 0.0, -0.014, 0.004, -0.004, 0.014,
         -0.006,
         0.008, -0.002, 0.024],
        [0.002, -0.014, -0.012, 0.002, 0.004, 0.004, 0.004, 0.004, 0.0, 0.0, 0.0, -0.008, 0.008, 0.002, 0.0,
         0.006, 0.008,
         0.004, 0.004],
        [0.006, 0.006, -0.004, 0.002, 0.016, 0.004, 0.008, 0.006, 0.0, 0.0, 0.0, 0.004, 0.012, 0.0, 0.006, 0.006,
         0.004,
         0.014, 0.004],
        [0.004, 0.008, 0.012, 0.004, 0.0, 0.0, -0.008, 0.0, 0.0, 0.0, 0.0, 0.01, 0.008, 0.01, 0.0, 0.004, -0.004,
         0.01,
         0.002],
        [0.0, 0.0, 0.004, 0.0, 0.008, 0.002, 0.008, 0.008, 0.016, 0.0, 0.0, 0.0, 0.014, 0.002, 0.004, 0.002,
         0.016, 0.006,
         0.008],
        [0.0, 0.004, 0.004, 0.006, 0.002, 0.014, 0.004, 0.016, 0.0, 0.0, 0.0, 0.0, 0.0, 0.004, 0.01, 0.006,
         0.006, 0.004,
         0.004],
        [0.01, 0.008, 0.0, 0.0, 0.0, 0.016, 0.006, 0.012, 0.0, 0.0, 0.0, 0.004, 0.02, -0.002, 0.0, -0.002, 0.014,
         0.0,
         0.01],
        [0.012, 0.01, -0.006, -0.004, -0.004, 0.008, -0.014, -0.014, 0.0, 0.0, 0.0, -0.014, -0.018, 0.02, 0.0,
         0.0, -0.002,
         0.004, -0.01],
        [-0.028, 0.004, -0.008, -0.016, 0.004, 0.0, -0.012, -0.012, -0.024, 0.0, 0.0, -0.012, 0.004, 0.008,
         0.008, 0.02,
         -0.012, -0.008, -0.012],
        [-0.008, 0.008, 0.024, -0.004, 0.004, 0.0, 0.004, -0.004, 0.0, 0.0, 0.0, 0.0, 0.004, -0.004, 0.02, 0.008,
         -0.004,
         -0.004, 0.02],
        [0.02, -0.024, 0.024, 0.025, 0.0, 0.008, 0.041, 0.012, 0.0, 0.0, 0.0, -0.049, -0.004, -0.008, -0.017,
         -0.008,
         0.016, -0.012, -0.004],
        [-0.004, -0.008, -0.02, 0.008, -0.008, 0.024, -0.004, 0.016, 0.0, 0.121, 0.0, -0.02, -0.004, -0.02,
         -0.004, 0.004,
         -0.024, 0.004, 0.024],
        [0.004, 0.016, 0.008, -0.032, -0.004, 0.0, -0.008, -0.012, 0.162, 0.024, 0.0, 0.0, -0.036, 0.0, -0.004,
         0.004,
         -0.012, 0.012, 0.024],
        [0.016, 0.02, -0.016, -0.008, 0.008, 0.012, -0.028, -0.012, 0.0, -0.012, 0.0, -0.004, -0.016, 0.028,
         0.012, -0.008,
         -0.004, 0.012, 0.008],
        [0.028, 0.004, 0.012, -0.012, -0.021, 0.012, 0.008, 0.02, 0.0, -0.048, 0.0, -0.029, 0.004, 0.025, 0.012,
         0.012,
         0.024, 0.016, 0.017],
        [0.012, 0.006, 0.0, 0.002, -0.008, 0.027, -0.014, -0.012, 0.0, 0.0, 0.0, -0.026, -0.014, 0.022, -0.002,
         0.004,
         -0.004, 0.0, 0.01],
        [0.01, 0.014, 0.016, 0.006, -0.006, 0.008, -0.002, -0.004, 0.012, 0.0, 0.0, -0.004, 0.0, 0.002, -0.004,
         -0.01,
         -0.006, 0.012, 0.01],
        [0.0, 0.002, 0.008, 0.004, 0.008, 0.012, 0.004, 0.002, 0.0, 0.0, 0.0, -0.008, -0.006, 0.016, 0.0, -0.002,
         0.01,
         0.016, 0.01],
        [0.008, 0.006, 0.004, 0.002, 0.01, 0.008, 0.012, 0.004, 0.0, 0.0, 0.0, 0.006, -0.002, 0.008, 0.004, 0.01,
         0.01,
         0.0, 0.006],
        [0.0, -0.004, 0.004, -0.004, 0.002, -0.002, 0.004, 0.01, 0.0, 0.0, 0.0, -0.014, 0.01, 0.004, 0.0, -0.004,
         -0.01,
         0.0, -0.012],
        [0.008, 0.002, -0.018, -0.008, 0.006, -0.01, 0.004, 0.034, -0.002, 0.0, 0.0, -0.01, 0.006, -0.004, 0.004,
         -0.01,
         0.006, 0.008, -0.01],
        [0.01, 0.006, 0.008, 0.002, 0.0, 0.0, 0.004, -0.008, 0.0, 0.0, 0.0, -0.002, -0.008, -0.008, 0.008, 0.002,
         0.004,
         0.016, 0.008],
        [-0.014, -0.008, -0.004, 0.0, -0.016, -0.008, -0.006, -0.014, 0.0, 0.0, 0.0, -0.016, 0.0, 0.006, -0.002,
         0.004,
         0.004, -0.01, -0.012]]
    # -------------------------------------------------------------
    selection_feature_index = [53, 20, 31, 46, 57, 1, 9, 44, 12, 60, 54, 49, 59, 47, 33, 55, 42, 45, 58, 32, 56, 48, 43,
                               52, 27, 51, 29, 40, 30, 34, 24, 38, 22, 50, 39, 6, 10, 13, 41, 25, 35, 23, 18, 26, 36,
                               14, 19, 28, 37, 2, 21, 7, 5, 17, 4]
    pse_clf_hg = load('pse_clf_hg.joblib')
    n_base = 9
    n_base_list = []
    for base in sequence.strip()[10:-10]:
        n_base += 1
        DspecificP = [None] * 20
        specificP = [None] * 21
        tspecific = [None] * 19
        file_inter = open('inter_use.txt', 'w')
        if base == 'U':
            new_line = sequence.strip()[n_base - 10:n_base + 11]
            new_length = len(new_line.strip())
            for j in range(new_length):
                if new_line[j] == 'A':
                    specificP[j] = PNlist[0][j]
                elif new_line[j] == 'U':
                    specificP[j] = PNlist[1][j]
                elif new_line[j] == 'C':
                    specificP[j] = PNlist[2][j]
                elif new_line[j] == 'G':
                    specificP[j] = PNlist[3][j]
            for j in range(new_length - 1):
                if new_line[j:j + 2] == 'AA':
                    DspecificP[j] = PDNlist[0][j]
                elif new_line[j:j + 2] == 'AU':
                    DspecificP[j] = PDNlist[1][j]
                elif new_line[j:j + 2] == 'AC':
                    DspecificP[j] = PDNlist[2][j]
                elif new_line[j:j + 2] == 'AG':
                    DspecificP[j] = PDNlist[3][j]
                elif new_line[j:j + 2] == 'UA':
                    DspecificP[j] = PDNlist[4][j]
                elif new_line[j:j + 2] == 'UU':
                    DspecificP[j] = PDNlist[5][j]
                elif new_line[j:j + 2] == 'UC':
                    DspecificP[j] = PDNlist[6][j]
                elif new_line[j:j + 2] == 'UG':
                    DspecificP[j] = PDNlist[7][j]
                elif new_line[j:j + 2] == 'CA':
                    DspecificP[j] = PDNlist[8][j]
                elif new_line[j:j + 2] == 'CU':
                    DspecificP[j] = PDNlist[9][j]
                elif new_line[j:j + 2] == 'CC':
                    DspecificP[j] = PDNlist[10][j]
                elif new_line[j:j + 2] == 'CG':
                    DspecificP[j] = PDNlist[11][j]
                elif new_line[j:j + 2] == 'GA':
                    DspecificP[j] = PDNlist[12][j]
                elif new_line[j:j + 2] == 'GU':
                    DspecificP[j] = PDNlist[13][j]
                elif new_line[j:j + 2] == 'GC':
                    DspecificP[j] = PDNlist[14][j]
                elif new_line[j:j + 2] == 'GG':
                    DspecificP[j] = PDNlist[15][j]
            for j in range(new_length - 2):
                if new_line[j:j + 3] == 'AAA':
                    tspecific[j] = PTNlist[0][j]
                elif new_line[j:j + 3] == 'AAU':
                    tspecific[j] = PTNlist[1][j]
                elif new_line[j:j + 3] == 'AAC':
                    tspecific[j] = PTNlist[2][j]
                elif new_line[j:j + 3] == 'AAG':
                    tspecific[j] = PTNlist[3][j]
                elif new_line[j:j + 3] == 'AUA':
                    tspecific[j] = PTNlist[4][j]
                elif new_line[j:j + 3] == 'AUU':
                    tspecific[j] = PTNlist[5][j]
                elif new_line[j:j + 3] == 'AUC':
                    tspecific[j] = PTNlist[6][j]
                elif new_line[j:j + 3] == 'AUG':
                    tspecific[j] = PTNlist[7][j]
                elif new_line[j:j + 3] == 'ACA':
                    tspecific[j] = PTNlist[8][j]
                elif new_line[j:j + 3] == 'ACU':
                    tspecific[j] = PTNlist[9][j]
                elif new_line[j:j + 3] == 'ACC':
                    tspecific[j] = PTNlist[10][j]
                elif new_line[j:j + 3] == 'ACG':
                    tspecific[j] = PTNlist[11][j]
                elif new_line[j:j + 3] == 'AGA':
                    tspecific[j] = PTNlist[12][j]
                elif new_line[j:j + 3] == 'AGU':
                    tspecific[j] = PTNlist[13][j]
                elif new_line[j:j + 3] == 'AGC':
                    tspecific[j] = PTNlist[14][j]
                elif new_line[j:j + 3] == 'AGG':
                    tspecific[j] = PTNlist[15][j]
                elif new_line[j:j + 3] == 'UAA':
                    tspecific[j] = PTNlist[16][j]
                elif new_line[j:j + 3] == 'UAU':
                    tspecific[j] = PTNlist[17][j]
                elif new_line[j:j + 3] == 'UAC':
                    tspecific[j] = PTNlist[18][j]
                elif new_line[j:j + 3] == 'UAG':
                    tspecific[j] = PTNlist[19][j]
                elif new_line[j:j + 3] == 'UUA':
                    tspecific[j] = PTNlist[20][j]
                elif new_line[j:j + 3] == 'UUU':
                    tspecific[j] = PTNlist[21][j]
                elif new_line[j:j + 3] == 'UUC':
                    tspecific[j] = PTNlist[22][j]
                elif new_line[j:j + 3] == 'UUG':
                    tspecific[j] = PTNlist[23][j]
                elif new_line[j:j + 3] == 'UCA':
                    tspecific[j] = PTNlist[24][j]
                elif new_line[j:j + 3] == 'UCU':
                    tspecific[j] = PTNlist[25][j]
                elif new_line[j:j + 3] == 'UCC':
                    tspecific[j] = PTNlist[26][j]
                elif new_line[j:j + 3] == 'UCG':
                    tspecific[j] = PTNlist[27][j]
                elif new_line[j:j + 3] == 'UGA':
                    tspecific[j] = PTNlist[28][j]
                elif new_line[j:j + 3] == 'UGU':
                    tspecific[j] = PTNlist[29][j]
                elif new_line[j:j + 3] == 'UGC':
                    tspecific[j] = PTNlist[30][j]
                elif new_line[j:j + 3] == 'UGG':
                    tspecific[j] = PTNlist[31][j]
                elif new_line[j:j + 3] == 'CAA':
                    tspecific[j] = PTNlist[32][j]
                elif new_line[j:j + 3] == 'CAU':
                    tspecific[j] = PTNlist[33][j]
                elif new_line[j:j + 3] == 'CAC':
                    tspecific[j] = PTNlist[34][j]
                elif new_line[j:j + 3] == 'CAG':
                    tspecific[j] = PTNlist[35][j]
                elif new_line[j:j + 3] == 'CUA':
                    tspecific[j] = PTNlist[36][j]
                elif new_line[j:j + 3] == 'CUU':
                    tspecific[j] = PTNlist[37][j]
                elif new_line[j:j + 3] == 'CUC':
                    tspecific[j] = PTNlist[38][j]
                elif new_line[j:j + 3] == 'CUG':
                    tspecific[j] = PTNlist[39][j]
                elif new_line[j:j + 3] == 'CCA':
                    tspecific[j] = PTNlist[40][j]
                elif new_line[j:j + 3] == 'CCU':
                    tspecific[j] = PTNlist[41][j]
                elif new_line[j:j + 3] == 'CCC':
                    tspecific[j] = PTNlist[42][j]
                elif new_line[j:j + 3] == 'CCG':
                    tspecific[j] = PTNlist[43][j]
                elif new_line[j:j + 3] == 'CGA':
                    tspecific[j] = PTNlist[44][j]
                elif new_line[j:j + 3] == 'CGU':
                    tspecific[j] = PTNlist[45][j]
                elif new_line[j:j + 3] == 'CGC':
                    tspecific[j] = PTNlist[46][j]
                elif new_line[j:j + 3] == 'CGG':
                    tspecific[j] = PTNlist[47][j]
                elif new_line[j:j + 3] == 'GAA':
                    tspecific[j] = PTNlist[48][j]
                elif new_line[j:j + 3] == 'GAU':
                    tspecific[j] = PTNlist[49][j]
                elif new_line[j:j + 3] == 'GAC':
                    tspecific[j] = PTNlist[50][j]
                elif new_line[j:j + 3] == 'GAG':
                    tspecific[j] = PTNlist[51][j]
                elif new_line[j:j + 3] == 'GUA':
                    tspecific[j] = PTNlist[52][j]
                elif new_line[j:j + 3] == 'GUU':
                    tspecific[j] = PTNlist[53][j]
                elif new_line[j:j + 3] == 'GUC':
                    tspecific[j] = PTNlist[54][j]
                elif new_line[j:j + 3] == 'GUG':
                    tspecific[j] = PTNlist[55][j]
                elif new_line[j:j + 3] == 'GCA':
                    tspecific[j] = PTNlist[56][j]
                elif new_line[j:j + 3] == 'GCU':
                    tspecific[j] = PTNlist[57][j]
                elif new_line[j:j + 3] == 'GCC':
                    tspecific[j] = PTNlist[58][j]
                elif new_line[j:j + 3] == 'GCG':
                    tspecific[j] = PTNlist[59][j]
                elif new_line[j:j + 3] == 'GGA':
                    tspecific[j] = PTNlist[60][j]
                elif new_line[j:j + 3] == 'GGU':
                    tspecific[j] = PTNlist[61][j]
                elif new_line[j:j + 3] == 'GGC':
                    tspecific[j] = PTNlist[62][j]
                elif new_line[j:j + 3] == 'GGG':
                    tspecific[j] = PTNlist[63][j]
            print(*specificP, *DspecificP, *tspecific, file=file_inter)
            file_inter.close()
            pddtest = pd.read_csv("inter_use.txt", sep=' ', header=None)
            selection_feature_index_1 = [x - 1 for x in selection_feature_index]
            X_test = pddtest.values[:, selection_feature_index_1]
            prediction = pse_clf_hg.predict(X_test)
            if prediction[0] == 1:
                n_base_list.append(n_base + 1)
    seq = str(name) + ' ' + sequence + word1 + str(n_base_list) + word2 + '\n'
    return seq


def prediction_pseudourdine_SC(name, sequence):
    word1 = '       The U site at position '
    word2 = ' is pseudouridine!'
    PNlist = [[-0.045, -0.049, 0.031, 0.021, 0.044, -0.02, 0.022, -0.011, -0.049, 0.005, 0.018, 0.041, -0.1, -0.144, -0.065, 0.0, 0.056, -0.014, -0.004, 0.034, -0.046, -0.036, 0.025, 0.012, 0.021, 0.002, 0.05, -0.001, -0.021, -0.052, 0.019], [-0.013, -0.014, -0.032, -0.027, -0.036, 0.016, -0.078, -0.014, 0.041, 0.056, 0.015, -0.033, 0.002, 0.229, 0.047, 0.0, 0.044, -0.055, -0.036, -0.011, -0.042, -0.02, -0.023, 0.025, -0.08, -0.013, -0.024, -0.065, 0.012, -0.001, -0.039], [-0.013, 0.003, -0.026, -0.02, 0.038, 0.003, -0.007, -0.017, 0.006, -0.017, 0.015, -0.045, -0.003, -0.055, -0.071, 0.0, -0.048, -0.09, 0.009, -0.01, 0.009, 0.034, -0.01, 0.012, 0.04, -0.02, -0.033, 0.028, 0.028, -0.026, -0.007], [0.073, 0.06, 0.028, 0.025, -0.045, 0.002, 0.063, 0.041, 0.002, -0.046, -0.049, 0.038, 0.102, -0.03, 0.088, 0.0, -0.052, 0.159, 0.031, -0.014, 0.079, 0.022, 0.009, -0.048, 0.018, 0.031, 0.006, 0.038, -0.02, 0.079, 0.028]]
    # ------------------------------------------------------------
    PDNlist = [[-0.042, 0.0, -0.003, 0.012, 0.009, 0.028, 0.025, -0.045, -0.003, 0.025, 0.016, -0.077, -0.083, -0.061, 0.0, 0.0, -0.001, -0.032, -0.032, -0.019, -0.038, 0.019, 0.022, 0.006, 0.006, 0.022, 0.013, -0.001, -0.052, -0.032], [0.003, -0.035, -0.032, 0.003, 0.028, -0.051, -0.003, 0.034, 0.022, -0.006, -0.01, -0.022, 0.012, -0.01, -0.065, 0.0, -0.032, -0.038, 0.035, 0.026, -0.016, -0.029, -0.013, -0.022, 0.015, -0.026, 0.003, -0.013, 0.006, -0.013], [0.016, -0.016, 0.041, 0.009, 0.01, -0.022, 0.012, 0.003, -0.006, -0.01, 0.0, 0.041, 0.01, -0.032, 0.0, 0.0, -0.042, 0.016, 0.019, 0.003, 0.013, 0.003, 0.003, 0.013, -0.026, 0.0, 0.016, -0.013, -0.007, 0.003], [-0.023, 0.003, 0.025, -0.004, -0.003, 0.026, -0.013, -0.003, -0.06, -0.003, 0.012, 0.098, -0.039, -0.042, 0.0, 0.0, 0.131, 0.041, -0.025, 0.025, -0.004, -0.029, 0.012, 0.015, 0.026, 0.006, 0.019, 0.025, 0.032, -0.009], [-0.042, 0.013, 0.018, 0.026, -0.007, -0.013, -0.016, -0.026, 0.019, 0.019, 0.025, -0.02, -0.026, 0.038, 0.0, 0.056, -0.007, -0.029, 0.003, 0.0, -0.019, -0.023, -0.032, -0.003, -0.016, -0.006, 0.013, -0.016, -0.009, -0.012], [0.012, -0.032, -0.035, -0.023, -0.026, -0.013, -0.048, 0.009, -0.013, 0.038, -0.035, -0.003, 0.05, 0.032, 0.047, 0.044, -0.01, -0.022, -0.051, -0.032, -0.057, 0.0, -0.003, -0.044, -0.026, 0.012, -0.039, -0.029, 0.032, -0.032], [-0.01, -0.007, 0.012, 0.016, -0.026, -0.003, -0.022, -0.01, 0.009, -0.004, -0.02, -0.026, -0.035, -0.013, 0.0, -0.048, 0.016, 0.0, 0.006, -0.003, 0.032, -0.013, 0.016, 0.035, -0.026, -0.025, 0.0, 0.006, 0.0, 0.01], [0.025, 0.012, -0.029, -0.045, 0.022, 0.044, 0.009, 0.013, 0.025, 0.003, 0.044, 0.016, 0.012, 0.172, 0.0, -0.052, 0.045, -0.003, 0.007, 0.025, 0.003, 0.016, -0.003, 0.038, -0.012, 0.006, 0.003, -0.025, -0.009, 0.035], [0.003, 0.003, -0.013, -0.013, -0.009, -0.016, -0.029, 0.009, 0.019, -0.01, 0.022, -0.016, -0.057, 0.009, 0.0, 0.0, -0.016, -0.025, 0.035, -0.006, -0.016, 0.006, 0.003, 0.006, 0.022, -0.02, -0.009, -0.019, 0.009, 0.019], [-0.026, 0.003, 0.019, -0.006, 0.035, 0.0, 0.009, 0.003, 0.009, -0.003, -0.003, 0.006, 0.102, -0.02, -0.071, 0.0, -0.019, -0.023, 0.003, -0.019, 0.009, 0.0, 0.023, 0.003, 0.0, 0.009, -0.028, 0.022, -0.01, -0.006], [-0.01, -0.003, -0.045, 0.003, 0.012, 0.022, -0.01, -0.016, -0.016, 0.01, -0.029, -0.029, -0.036, -0.032, 0.0, 0.0, -0.02, -0.016, -0.023, 0.0, 0.0, 0.003, -0.007, 0.006, 0.022, -0.01, 0.003, 0.028, -0.003, -0.026], [0.019, 0.0, 0.013, -0.003, 0.0, -0.004, 0.022, -0.013, -0.006, -0.013, 0.025, -0.007, -0.013, -0.013, 0.0, 0.0, 0.006, -0.026, -0.006, 0.015, 0.016, 0.026, -0.029, -0.004, -0.003, 0.0, 0.003, -0.004, 0.031, -0.013], [0.032, 0.016, 0.019, 0.019, -0.013, 0.022, 0.009, 0.012, -0.028, -0.016, -0.022, 0.012, 0.022, -0.051, 0.0, 0.0, 0.01, 0.083, 0.029, -0.019, 0.038, 0.022, 0.019, 0.013, -0.009, 0.054, -0.016, 0.015, -0.001, 0.045], [-0.004, 0.032, 0.022, -0.01, -0.023, -0.013, 0.029, -0.007, 0.038, -0.013, 0.016, 0.022, 0.063, 0.044, 0.088, 0.0, 0.006, 0.048, 0.003, -0.017, 0.044, 0.007, 0.019, -0.016, -0.003, -0.019, 0.0, 0.031, -0.029, 0.013], [0.006, 0.0, -0.029, 0.009, 0.007, -0.003, 0.003, 0.028, -0.003, 0.019, 0.003, 0.009, 0.006, 0.006, 0.0, 0.0, -0.045, 0.009, -0.013, 0.009, -0.01, -0.004, 0.0, -0.013, 0.01, 0.003, 0.009, 0.006, -0.016, 0.006], [0.038, 0.012, 0.015, 0.006, -0.016, -0.003, 0.023, 0.006, -0.003, -0.035, -0.045, -0.006, 0.009, -0.029, 0.0, 0.0, -0.023, 0.019, 0.012, 0.013, 0.006, -0.004, -0.029, -0.032, 0.022, -0.006, 0.012, -0.016, 0.025, 0.016]]
    # -------------------------------------------------------------
    PTNlist = [[-0.032, 0.0, -0.02, 0.003, -0.004, 0.022, -0.016, -0.006, 0.01, 0.022, -0.045, -0.045, -0.038, 0.0, 0.0, 0.0, -0.019, -0.016, -0.029, -0.036, -0.022, -0.006, 0.0, -0.023, 0.019, 0.01, -0.003, -0.013, -0.023], [-0.02, -0.039, -0.006, 0.025, -0.007, -0.007, 0.05, -0.013, 0.0, -0.019, -0.032, -0.007, -0.013, -0.122, 0.0, 0.0, 0.012, 0.025, -0.006, 0.019, -0.019, 0.019, -0.013, -0.006, -0.026, 0.025, 0.006, -0.007, -0.039], [0.0, 0.013, 0.032, 0.012, -0.019, 0.025, 0.025, -0.006, 0.0, 0.013, 0.045, 0.006, -0.057, 0.0, 0.0, 0.0, 0.031, -0.038, 0.006, 0.026, -0.032, -0.02, 0.026, 0.026, 0.007, -0.019, -0.045, -0.032, 0.007], [0.0, 0.025, 0.006, -0.019, 0.051, -0.006, 0.006, -0.058, -0.026, 0.012, 0.108, -0.064, -0.019, 0.0, 0.0, 0.0, -0.006, -0.019, -0.006, -0.013, 0.019, 0.051, 0.032, 0.038, -0.007, 0.019, 0.07, 0.064, -0.026], [-0.019, -0.013, -0.013, 0.019, -0.007, -0.052, -0.026, 0.006, 0.038, -0.006, 0.006, -0.019, -0.045, 0.0, -0.09, 0.0, -0.038, -0.057, 0.012, -0.001, -0.045, -0.019, -0.013, 0.013, 0.013, -0.045, -0.007, -0.006, 0.007], [0.025, -0.025, 0.013, -0.019, 0.013, -0.026, 0.019, 0.032, -0.007, -0.051, -0.026, -0.013, -0.013, -0.019, 0.044, 0.0, -0.007, -0.013, 0.025, 0.013, 0.013, -0.007, -0.019, -0.032, 0.006, 0.0, 0.006, 0.025, -0.013], [-0.025, 0.0, -0.026, 0.006, 0.019, -0.013, -0.006, -0.007, -0.013, 0.025, -0.006, -0.019, 0.013, 0.0, -0.02, 0.0, -0.013, 0.006, 0.012, 0.032, 0.0, 0.006, -0.006, 0.0, 0.019, 0.0, 0.013, -0.013, 0.006], [0.026, -0.032, -0.038, -0.001, 0.032, -0.013, 0.006, 0.038, 0.025, 0.019, 0.007, 0.006, 0.07, 0.0, -0.064, 0.0, -0.007, -0.013, 0.019, 0.006, 0.0, -0.038, 0.013, -0.026, -0.007, -0.006, -0.007, -0.033, 0.013], [-0.019, -0.006, -0.003, 0.003, -0.013, 0.019, 0.003, 0.006, -0.003, 0.038, -0.052, -0.055, -0.038, 0.0, 0.0, 0.0, -0.039, -0.026, -0.013, -0.032, -0.017, -0.003, -0.004, -0.017, 0.007, 0.006, -0.007, -0.023, -0.029], [0.0, 0.006, 0.006, 0.013, 0.022, -0.013, 0.003, 0.003, -0.007, 0.0, 0.003, 0.058, 0.013, -0.032, 0.0, 0.0, -0.003, 0.009, -0.007, 0.007, -0.006, 0.007, 0.0, 0.007, -0.013, 0.003, 0.016, -0.003, 0.0], [0.007, -0.023, 0.01, 0.003, 0.0, -0.013, -0.006, -0.016, 0.019, -0.025, 0.006, -0.006, 0.0, 0.0, 0.0, 0.0, -0.009, 0.009, 0.006, -0.016, -0.003, -0.006, 0.012, -0.003, 0.009, -0.003, 0.0, 0.0, -0.004], [-0.003, 0.006, 0.01, -0.006, -0.003, 0.007, -0.004, 0.004, -0.007, 0.0, -0.004, 0.0, -0.003, 0.0, 0.0, 0.0, -0.01, 0.007, 0.003, 0.01, 0.016, 0.0, -0.007, 0.003, -0.01, 0.004, 0.003, 0.0, 0.003], [-0.01, 0.013, 0.025, 0.012, 0.006, 0.009, 0.009, 0.006, -0.025, 0.009, 0.01, 0.022, -0.026, 0.0, 0.0, 0.0, 0.048, 0.003, -0.02, 0.028, 0.0, -0.004, 0.019, 0.006, 0.015, -0.004, 0.0, 0.016, 0.022], [-0.006, -0.006, 0.0, -0.013, -0.006, 0.007, -0.023, 0.004, -0.003, 0.0, 0.016, 0.073, 0.003, -0.042, 0.0, 0.0, 0.058, 0.01, 0.0, 0.004, -0.003, -0.019, -0.003, -0.003, 0.0, 0.0, 0.013, -0.01, 0.009], [-0.007, -0.003, -0.003, 0.01, -0.003, 0.0, 0.006, -0.003, -0.006, 0.01, 0.0, -0.003, 0.0, 0.0, 0.0, 0.0, 0.016, 0.0, -0.01, 0.003, 0.0, -0.003, 0.003, 0.009, 0.006, 0.0, 0.0, 0.009, -0.007], [0.0, 0.0, 0.003, -0.012, 0.0, 0.009, -0.007, -0.009, -0.025, -0.023, -0.013, 0.007, -0.016, 0.0, 0.0, 0.0, 0.01, 0.029, 0.003, -0.009, 0.0, -0.003, -0.007, 0.003, 0.003, 0.01, 0.007, 0.01, 0.006], [0.0, -0.003, 0.019, 0.022, 0.007, 0.009, -0.025, 0.003, -0.006, 0.0, -0.003, -0.006, -0.01, 0.0, 0.0, -0.001, -0.003, -0.01, -0.006, 0.006, 0.019, 0.0, 0.0, 0.003, -0.007, 0.003, 0.019, -0.026, -0.006], [-0.045, -0.026, -0.006, 0.019, -0.058, -0.045, 0.031, 0.019, -0.001, 0.038, 0.013, -0.007, 0.007, 0.076, 0.0, -0.064, -0.057, -0.038, 0.006, 0.0, -0.025, -0.039, -0.045, 0.032, -0.026, -0.001, 0.0, 0.0, -0.013], [-0.013, 0.064, 0.012, -0.007, 0.0, 0.006, -0.013, -0.045, 0.019, -0.006, 0.019, 0.007, -0.02, 0.0, 0.0, -0.084, 0.013, 0.013, 0.006, -0.02, 0.006, 0.012, -0.007, -0.02, -0.007, -0.026, 0.007, 0.025, 0.0], [-0.025, -0.007, -0.006, -0.006, 0.032, -0.007, -0.001, -0.033, 0.032, 0.007, 0.025, -0.025, -0.019, 0.0, 0.0, 0.261, 0.038, -0.013, 0.006, 0.007, -0.057, -0.019, -0.013, -0.025, 0.013, 0.006, -0.019, -0.007, 0.006], [0.057, 0.038, 0.019, -0.007, -0.026, 0.006, -0.051, 0.025, -0.025, 0.032, -0.045, -0.026, 0.018, 0.0, -0.007, -0.013, 0.0, 0.019, -0.032, 0.013, -0.013, 0.006, -0.006, -0.013, 0.012, 0.031, -0.026, -0.007, 0.026], [-0.026, -0.064, -0.052, -0.02, -0.007, -0.032, -0.013, -0.025, 0.019, -0.006, -0.013, 0.038, -0.026, 0.063, 0.051, -0.02, -0.02, -0.051, -0.057, -0.089, -0.083, -0.026, -0.051, -0.051, -0.026, -0.007, -0.044, -0.02, -0.006], [0.0, -0.013, 0.012, -0.038, -0.006, -0.006, -0.026, 0.019, -0.013, -0.001, -0.019, -0.026, 0.006, 0.0, 0.031, 0.031, 0.006, -0.001, -0.032, 0.019, -0.045, 0.013, 0.019, -0.025, -0.045, 0.013, 0.0, -0.026, -0.001], [-0.006, -0.026, -0.051, 0.019, -0.013, 0.006, -0.006, 0.0, -0.007, 0.051, 0.007, 0.006, 0.102, 0.0, 0.019, 0.088, -0.006, -0.013, 0.019, -0.006, 0.025, 0.006, 0.032, 0.0, 0.006, -0.013, -0.006, -0.006, 0.044], [-0.007, -0.009, 0.028, 0.029, 0.0, -0.013, -0.022, 0.003, -0.006, -0.007, -0.01, -0.038, -0.016, 0.0, 0.0, -0.017, 0.016, 0.01, -0.02, 0.007, 0.019, -0.007, -0.003, 0.025, -0.01, -0.006, 0.0, -0.02, -0.004], [0.003, 0.009, 0.0, -0.003, -0.013, 0.003, -0.006, 0.0, 0.012, -0.01, 0.01, 0.022, -0.009, -0.013, 0.0, -0.019, -0.013, -0.006, -0.003, -0.006, 0.019, 0.003, 0.013, 0.01, -0.003, -0.016, -0.009, -0.006, 0.006], [-0.013, -0.009, 0.0, 0.0, 0.003, 0.009, -0.013, 0.0, 0.004, -0.004, -0.026, -0.016, -0.016, 0.0, 0.0, -0.02, 0.007, -0.019, 0.012, -0.003, 0.006, 0.003, -0.007, 0.009, -0.02, -0.006, 0.019, -0.006, -0.013], [0.007, 0.0, 0.003, 0.012, -0.01, 0.007, -0.006, -0.009, -0.007, 0.016, 0.003, 0.0, -0.003, 0.0, 0.0, 0.006, 0.004, 0.007, 0.01, 0.007, 0.006, -0.013, 0.013, -0.006, 0.0, 0.006, 0.009, 0.013, 0.004], [0.012, 0.01, 0.0, -0.016, 0.012, 0.009, 0.007, -0.003, 0.006, -0.003, 0.009, 0.016, 0.003, 0.0, 0.0, 0.01, 0.029, 0.016, 0.003, 0.006, 0.016, 0.012, 0.006, 0.01, 0.012, -0.003, 0.007, -0.013, 0.006], [0.015, -0.003, -0.022, -0.003, 0.006, 0.003, -0.007, 0.003, 0.004, 0.006, 0.007, -0.004, 0.013, 0.172, 0.0, 0.006, -0.01, -0.004, -0.009, 0.009, -0.003, 0.026, -0.004, 0.0, -0.013, 0.013, 0.015, -0.009, -0.022], [0.0, -0.006, 0.003, -0.006, 0.003, 0.009, 0.004, 0.01, 0.019, -0.006, -0.006, 0.0, -0.007, 0.0, 0.0, -0.045, 0.019, -0.016, -0.006, -0.007, -0.006, -0.006, 0.004, 0.01, -0.007, -0.003, 0.003, -0.003, 0.003], [-0.004, 0.013, -0.009, -0.019, 0.0, 0.022, 0.006, 0.003, -0.003, 0.006, 0.035, 0.003, 0.004, 0.0, 0.0, -0.023, 0.007, 0.0, 0.019, 0.016, -0.004, -0.016, -0.009, 0.019, -0.006, 0.0, -0.023, 0.0, 0.004], [0.0, 0.0, 0.012, -0.004, 0.022, -0.016, -0.003, 0.003, 0.013, 0.01, -0.006, -0.022, -0.029, 0.0, 0.0, 0.0, -0.004, -0.016, 0.025, 0.0, -0.003, 0.019, 0.003, 0.006, 0.019, -0.016, -0.01, -0.026, 0.006], [0.006, -0.007, -0.02, 0.0, -0.039, 0.006, -0.013, 0.019, -0.013, -0.019, 0.006, 0.019, -0.013, 0.019, 0.0, 0.0, -0.057, 0.007, -0.001, -0.007, -0.006, -0.026, -0.007, 0.019, 0.006, -0.026, -0.007, 0.0, 0.006], [-0.007, -0.007, -0.02, 0.006, -0.013, -0.007, -0.026, 0.013, -0.006, -0.013, 0.006, -0.02, -0.007, 0.0, 0.0, 0.0, 0.0, 0.013, -0.025, 0.012, 0.006, -0.001, -0.006, -0.045, -0.001, 0.032, 0.0, 0.006, -0.02], [0.007, 0.019, -0.013, -0.026, -0.013, 0.0, -0.013, -0.019, 0.032, -0.007, 0.044, 0.013, -0.039, 0.0, 0.0, 0.0, 0.031, -0.039, 0.044, -0.019, -0.025, 0.0, 0.012, 0.025, -0.001, -0.013, 0.006, 0.006, 0.019], [-0.007, 0.006, 0.006, -0.007, 0.032, 0.006, 0.013, 0.0, 0.006, 0.019, 0.0, -0.019, 0.07, 0.0, -0.064, 0.0, -0.006, 0.026, 0.019, -0.013, 0.0, -0.045, 0.032, -0.013, -0.013, 0.051, 0.012, 0.0, -0.019], [-0.032, 0.019, 0.006, 0.025, -0.006, -0.007, 0.025, -0.013, 0.0, 0.013, -0.001, 0.025, 0.044, -0.038, -0.013, 0.0, -0.032, -0.052, -0.026, -0.007, 0.025, 0.0, -0.02, -0.001, 0.019, -0.038, -0.039, 0.019, -0.019], [-0.019, -0.019, 0.026, -0.026, -0.007, -0.007, -0.007, 0.006, 0.019, -0.052, -0.019, -0.026, -0.025, 0.0, -0.032, 0.0, -0.013, -0.019, 0.013, -0.007, -0.013, 0.019, 0.026, -0.019, 0.0, -0.013, -0.007, 0.013, 0.0], [0.006, 0.0, 0.0, -0.007, 0.051, 0.006, -0.013, 0.012, -0.007, 0.012, 0.013, 0.032, 0.115, 0.0, -0.032, 0.0, 0.013, 0.0, -0.001, -0.013, 0.007, 0.025, 0.006, 0.038, -0.007, 0.019, -0.026, 0.012, 0.019], [-0.003, 0.003, -0.01, -0.01, 0.019, -0.013, -0.023, 0.003, 0.019, 0.016, -0.007, -0.035, -0.029, 0.0, 0.0, 0.0, -0.019, -0.003, 0.019, -0.004, -0.007, 0.016, 0.016, 0.009, 0.019, -0.016, -0.01, -0.01, 0.019], [-0.003, -0.007, -0.01, 0.01, -0.006, 0.013, 0.006, 0.007, -0.016, -0.007, -0.009, 0.003, -0.016, -0.032, 0.0, 0.0, 0.007, -0.012, -0.016, -0.006, -0.003, 0.015, -0.013, -0.016, 0.004, -0.02, 0.01, -0.003, 0.0], [0.003, -0.01, -0.01, 0.004, 0.019, 0.0, -0.007, -0.006, -0.003, 0.006, -0.006, -0.013, -0.01, 0.0, 0.0, 0.0, -0.007, -0.003, -0.003, 0.019, 0.003, 0.006, -0.007, 0.016, 0.01, 0.01, -0.004, 0.01, -0.007], [-0.006, 0.01, -0.004, -0.004, 0.003, 0.006, 0.01, -0.016, -0.004, 0.003, -0.013, -0.007, -0.01, 0.0, 0.0, 0.0, -0.003, -0.013, 0.004, -0.01, 0.003, -0.016, 0.0, 0.003, 0.009, 0.0, -0.003, 0.007, -0.01], [0.003, 0.003, -0.007, -0.007, 0.006, -0.003, 0.0, -0.016, 0.003, 0.003, 0.006, -0.007, -0.003, 0.0, 0.0, 0.0, 0.012, 0.003, 0.003, 0.003, 0.01, 0.007, -0.003, -0.003, 0.016, -0.01, 0.006, 0.0, 0.013], [0.01, 0.007, 0.009, 0.0, -0.009, 0.009, 0.016, 0.003, -0.006, 0.0, 0.013, -0.003, -0.007, -0.013, 0.0, 0.0, 0.0, -0.01, -0.006, 0.01, 0.0, 0.013, -0.01, 0.0, -0.01, 0.003, 0.004, -0.009, 0.006], [-0.004, -0.013, 0.006, 0.0, -0.007, -0.004, 0.004, 0.003, 0.003, -0.004, 0.01, 0.01, 0.01, 0.0, 0.0, 0.0, -0.003, 0.0, 0.0, 0.0, 0.01, 0.006, -0.012, 0.0, 0.003, 0.007, -0.007, -0.01, 0.013], [0.01, 0.004, 0.004, 0.003, 0.01, -0.006, 0.003, -0.004, -0.006, -0.013, -0.003, -0.007, -0.013, 0.0, 0.0, 0.0, -0.003, -0.019, -0.004, 0.003, -0.003, 0.0, -0.003, 0.0, -0.013, 0.0, 0.0, 0.016, 0.0], [0.032, 0.0, 0.0, -0.013, 0.003, 0.01, 0.0, -0.003, 0.01, -0.017, -0.022, -0.01, 0.015, 0.0, 0.0, 0.0, -0.006, 0.009, -0.01, -0.01, 0.025, 0.009, 0.003, 0.019, -0.01, 0.016, -0.007, 0.012, -0.009], [-0.013, 0.006, 0.039, 0.013, 0.0, 0.038, 0.0, 0.019, -0.001, -0.02, -0.033, 0.019, 0.0, -0.103, 0.0, 0.0, 0.026, 0.076, 0.051, -0.045, -0.006, 0.019, 0.019, -0.013, -0.006, 0.006, -0.026, 0.019, 0.019], [-0.013, 0.013, -0.007, 0.006, -0.013, -0.001, 0.019, 0.025, -0.033, 0.007, 0.012, 0.025, 0.019, 0.0, 0.0, 0.0, -0.013, 0.051, 0.019, 0.006, 0.025, 0.013, 0.013, -0.013, 0.0, 0.044, 0.012, -0.013, 0.019], [0.025, 0.013, 0.006, 0.045, -0.02, -0.013, 0.0, -0.013, -0.045, 0.013, 0.019, 0.0, -0.006, 0.0, 0.0, 0.0, 0.019, 0.019, 0.006, 0.019, 0.006, -0.007, -0.001, 0.013, 0.006, 0.025, -0.006, 0.0, -0.019], [-0.007, 0.006, 0.038, -0.02, -0.026, 0.006, 0.013, 0.006, 0.019, 0.006, 0.0, 0.013, 0.032, 0.0, 0.273, 0.0, -0.013, 0.019, 0.0, -0.038, 0.012, -0.007, -0.019, -0.02, -0.025, -0.013, -0.013, -0.007, -0.038], [-0.032, 0.0, -0.013, -0.039, -0.025, -0.032, -0.013, -0.019, 0.064, -0.026, 0.031, 0.051, 0.058, 0.089, 0.006, 0.0, 0.013, 0.013, -0.006, -0.032, 0.044, 0.025, 0.0, 0.031, 0.025, -0.032, 0.019, 0.038, -0.026], [0.032, 0.057, 0.019, 0.006, -0.013, -0.019, 0.019, 0.0, 0.0, -0.013, -0.007, 0.0, -0.019, 0.0, -0.077, 0.0, 0.019, 0.025, 0.0, 0.019, 0.032, -0.007, 0.032, -0.007, -0.026, 0.0, 0.006, 0.026, 0.013], [0.0, 0.0, 0.0, 0.032, 0.019, 0.019, 0.038, 0.0, -0.006, 0.006, 0.007, -0.019, 0.057, 0.0, -0.025, 0.0, -0.007, 0.038, 0.012, 0.019, 0.0, -0.001, 0.025, -0.038, 0.019, 0.007, -0.013, 0.006, -0.007], [0.032, -0.003, -0.016, -0.023, 0.007, 0.003, 0.006, 0.003, 0.006, -0.009, -0.026, -0.012, 0.032, 0.0, 0.0, 0.0, -0.016, 0.022, -0.013, -0.026, 0.028, 0.019, 0.003, 0.009, -0.013, 0.019, -0.003, 0.01, -0.001], [0.004, 0.01, -0.003, 0.016, -0.003, 0.006, 0.0, 0.0, 0.007, 0.013, 0.003, 0.019, -0.007, 0.006, 0.0, 0.0, -0.012, 0.013, 0.006, 0.016, -0.009, -0.004, 0.004, 0.0, 0.022, 0.003, 0.006, 0.004, -0.013], [0.0, -0.003, 0.003, 0.006, 0.0, -0.007, 0.01, 0.006, -0.01, -0.007, -0.003, 0.0, -0.007, 0.0, 0.0, 0.0, -0.007, -0.009, -0.016, 0.0, -0.003, -0.01, 0.007, 0.0, -0.009, 0.003, 0.013, -0.007, -0.003], [0.003, -0.003, -0.013, -0.003, 0.006, 0.003, -0.013, 0.016, 0.004, 0.006, 0.007, -0.007, 0.003, 0.0, 0.0, 0.0, -0.016, -0.007, 0.0, 0.01, 0.0, 0.0, -0.01, -0.003, 0.0, -0.007, -0.013, 0.013, -0.01], [0.009, -0.007, 0.0, -0.003, -0.003, -0.006, -0.003, -0.016, 0.0, -0.032, -0.013, -0.009, -0.025, 0.0, 0.0, 0.0, -0.006, 0.007, -0.007, -0.001, -0.003, 0.003, -0.01, -0.022, 0.01, 0.0, 0.003, -0.003, 0.003], [0.013, 0.026, 0.003, -0.006, -0.004, 0.01, 0.007, 0.029, -0.006, 0.01, -0.012, -0.003, 0.035, -0.029, 0.0, 0.0, 0.0, 0.006, 0.0, 0.023, 0.013, 0.0, 0.0, 0.0, 0.003, -0.016, 0.0, 0.0, 0.019], [0.009, -0.006, 0.003, 0.003, 0.003, -0.004, 0.016, -0.013, 0.003, 0.003, 0.006, 0.0, 0.003, 0.0, 0.0, 0.0, -0.023, 0.004, 0.025, -0.006, -0.007, 0.003, -0.006, -0.009, 0.0, 0.007, 0.01, -0.013, -0.004], [0.006, 0.0, 0.01, 0.012, -0.013, -0.003, 0.003, 0.007, 0.0, -0.016, -0.026, 0.006, -0.004, 0.0, 0.0, 0.0, 0.007, 0.003, -0.006, -0.003, 0.003, -0.01, -0.012, 0.0, 0.009, 0.003, 0.0, 0.0, 0.007]]
    # -------------------------------------------------------------
    selection_feature_index = [74, 18, 66, 82, 63, 73, 78, 70, 85, 79, 14, 88, 72, 68, 75, 64, 69, 81, 89, 45, 83, 62,
                               77, 67, 71, 44, 86, 90, 76, 80, 87, 84, 65, 48, 1, 43, 34, 40, 49, 32, 15, 30]
    pse_clf_sc = load('pse_clf_sc.joblib')
    # --------------------------------------------------------------
    n_base = 14
    n_base_list = []
    for base in sequence.strip()[15:-15]:
        n_base += 1
        DspecificP = [None] * 30
        specificP = [None] * 31
        tspecific = [None] * 29
        file_inter = open('inter_use.txt', 'w')
        if base == 'U':
            new_line = sequence.strip()[n_base - 15:n_base + 16]
            new_length = len(new_line.strip())
            for j in range(new_length):
                if new_line[j] == 'A':
                    specificP[j] = PNlist[0][j]
                elif new_line[j] == 'U':
                    specificP[j] = PNlist[1][j]
                elif new_line[j] == 'C':
                    specificP[j] = PNlist[2][j]
                elif new_line[j] == 'G':
                    specificP[j] = PNlist[3][j]
            for j in range(new_length - 1):
                if new_line[j:j + 2] == 'AA':
                    DspecificP[j] = PDNlist[0][j]
                elif new_line[j:j + 2] == 'AU':
                    DspecificP[j] = PDNlist[1][j]
                elif new_line[j:j + 2] == 'AC':
                    DspecificP[j] = PDNlist[2][j]
                elif new_line[j:j + 2] == 'AG':
                    DspecificP[j] = PDNlist[3][j]
                elif new_line[j:j + 2] == 'UA':
                    DspecificP[j] = PDNlist[4][j]
                elif new_line[j:j + 2] == 'UU':
                    DspecificP[j] = PDNlist[5][j]
                elif new_line[j:j + 2] == 'UC':
                    DspecificP[j] = PDNlist[6][j]
                elif new_line[j:j + 2] == 'UG':
                    DspecificP[j] = PDNlist[7][j]
                elif new_line[j:j + 2] == 'CA':
                    DspecificP[j] = PDNlist[8][j]
                elif new_line[j:j + 2] == 'CU':
                    DspecificP[j] = PDNlist[9][j]
                elif new_line[j:j + 2] == 'CC':
                    DspecificP[j] = PDNlist[10][j]
                elif new_line[j:j + 2] == 'CG':
                    DspecificP[j] = PDNlist[11][j]
                elif new_line[j:j + 2] == 'GA':
                    DspecificP[j] = PDNlist[12][j]
                elif new_line[j:j + 2] == 'GU':
                    DspecificP[j] = PDNlist[13][j]
                elif new_line[j:j + 2] == 'GC':
                    DspecificP[j] = PDNlist[14][j]
                elif new_line[j:j + 2] == 'GG':
                    DspecificP[j] = PDNlist[15][j]
            for j in range(new_length - 2):
                if new_line[j:j + 3] == 'AAA':
                    tspecific[j] = PTNlist[0][j]
                elif new_line[j:j + 3] == 'AAU':
                    tspecific[j] = PTNlist[1][j]
                elif new_line[j:j + 3] == 'AAC':
                    tspecific[j] = PTNlist[2][j]
                elif new_line[j:j + 3] == 'AAG':
                    tspecific[j] = PTNlist[3][j]
                elif new_line[j:j + 3] == 'AUA':
                    tspecific[j] = PTNlist[4][j]
                elif new_line[j:j + 3] == 'AUU':
                    tspecific[j] = PTNlist[5][j]
                elif new_line[j:j + 3] == 'AUC':
                    tspecific[j] = PTNlist[6][j]
                elif new_line[j:j + 3] == 'AUG':
                    tspecific[j] = PTNlist[7][j]
                elif new_line[j:j + 3] == 'ACA':
                    tspecific[j] = PTNlist[8][j]
                elif new_line[j:j + 3] == 'ACU':
                    tspecific[j] = PTNlist[9][j]
                elif new_line[j:j + 3] == 'ACC':
                    tspecific[j] = PTNlist[10][j]
                elif new_line[j:j + 3] == 'ACG':
                    tspecific[j] = PTNlist[11][j]
                elif new_line[j:j + 3] == 'AGA':
                    tspecific[j] = PTNlist[12][j]
                elif new_line[j:j + 3] == 'AGU':
                    tspecific[j] = PTNlist[13][j]
                elif new_line[j:j + 3] == 'AGC':
                    tspecific[j] = PTNlist[14][j]
                elif new_line[j:j + 3] == 'AGG':
                    tspecific[j] = PTNlist[15][j]
                elif new_line[j:j + 3] == 'UAA':
                    tspecific[j] = PTNlist[16][j]
                elif new_line[j:j + 3] == 'UAU':
                    tspecific[j] = PTNlist[17][j]
                elif new_line[j:j + 3] == 'UAC':
                    tspecific[j] = PTNlist[18][j]
                elif new_line[j:j + 3] == 'UAG':
                    tspecific[j] = PTNlist[19][j]
                elif new_line[j:j + 3] == 'UUA':
                    tspecific[j] = PTNlist[20][j]
                elif new_line[j:j + 3] == 'UUU':
                    tspecific[j] = PTNlist[21][j]
                elif new_line[j:j + 3] == 'UUC':
                    tspecific[j] = PTNlist[22][j]
                elif new_line[j:j + 3] == 'UUG':
                    tspecific[j] = PTNlist[23][j]
                elif new_line[j:j + 3] == 'UCA':
                    tspecific[j] = PTNlist[24][j]
                elif new_line[j:j + 3] == 'UCU':
                    tspecific[j] = PTNlist[25][j]
                elif new_line[j:j + 3] == 'UCC':
                    tspecific[j] = PTNlist[26][j]
                elif new_line[j:j + 3] == 'UCG':
                    tspecific[j] = PTNlist[27][j]
                elif new_line[j:j + 3] == 'UGA':
                    tspecific[j] = PTNlist[28][j]
                elif new_line[j:j + 3] == 'UGU':
                    tspecific[j] = PTNlist[29][j]
                elif new_line[j:j + 3] == 'UGC':
                    tspecific[j] = PTNlist[30][j]
                elif new_line[j:j + 3] == 'UGG':
                    tspecific[j] = PTNlist[31][j]
                elif new_line[j:j + 3] == 'CAA':
                    tspecific[j] = PTNlist[32][j]
                elif new_line[j:j + 3] == 'CAU':
                    tspecific[j] = PTNlist[33][j]
                elif new_line[j:j + 3] == 'CAC':
                    tspecific[j] = PTNlist[34][j]
                elif new_line[j:j + 3] == 'CAG':
                    tspecific[j] = PTNlist[35][j]
                elif new_line[j:j + 3] == 'CUA':
                    tspecific[j] = PTNlist[36][j]
                elif new_line[j:j + 3] == 'CUU':
                    tspecific[j] = PTNlist[37][j]
                elif new_line[j:j + 3] == 'CUC':
                    tspecific[j] = PTNlist[38][j]
                elif new_line[j:j + 3] == 'CUG':
                    tspecific[j] = PTNlist[39][j]
                elif new_line[j:j + 3] == 'CCA':
                    tspecific[j] = PTNlist[40][j]
                elif new_line[j:j + 3] == 'CCU':
                    tspecific[j] = PTNlist[41][j]
                elif new_line[j:j + 3] == 'CCC':
                    tspecific[j] = PTNlist[42][j]
                elif new_line[j:j + 3] == 'CCG':
                    tspecific[j] = PTNlist[43][j]
                elif new_line[j:j + 3] == 'CGA':
                    tspecific[j] = PTNlist[44][j]
                elif new_line[j:j + 3] == 'CGU':
                    tspecific[j] = PTNlist[45][j]
                elif new_line[j:j + 3] == 'CGC':
                    tspecific[j] = PTNlist[46][j]
                elif new_line[j:j + 3] == 'CGG':
                    tspecific[j] = PTNlist[47][j]
                elif new_line[j:j + 3] == 'GAA':
                    tspecific[j] = PTNlist[48][j]
                elif new_line[j:j + 3] == 'GAU':
                    tspecific[j] = PTNlist[49][j]
                elif new_line[j:j + 3] == 'GAC':
                    tspecific[j] = PTNlist[50][j]
                elif new_line[j:j + 3] == 'GAG':
                    tspecific[j] = PTNlist[51][j]
                elif new_line[j:j + 3] == 'GUA':
                    tspecific[j] = PTNlist[52][j]
                elif new_line[j:j + 3] == 'GUU':
                    tspecific[j] = PTNlist[53][j]
                elif new_line[j:j + 3] == 'GUC':
                    tspecific[j] = PTNlist[54][j]
                elif new_line[j:j + 3] == 'GUG':
                    tspecific[j] = PTNlist[55][j]
                elif new_line[j:j + 3] == 'GCA':
                    tspecific[j] = PTNlist[56][j]
                elif new_line[j:j + 3] == 'GCU':
                    tspecific[j] = PTNlist[57][j]
                elif new_line[j:j + 3] == 'GCC':
                    tspecific[j] = PTNlist[58][j]
                elif new_line[j:j + 3] == 'GCG':
                    tspecific[j] = PTNlist[59][j]
                elif new_line[j:j + 3] == 'GGA':
                    tspecific[j] = PTNlist[60][j]
                elif new_line[j:j + 3] == 'GGU':
                    tspecific[j] = PTNlist[61][j]
                elif new_line[j:j + 3] == 'GGC':
                    tspecific[j] = PTNlist[62][j]
                elif new_line[j:j + 3] == 'GGG':
                    tspecific[j] = PTNlist[63][j]
            print(*specificP, *DspecificP, *tspecific, file=file_inter)
            file_inter.close()
            pddtest = pd.read_csv("inter_use.txt", sep=' ', header=None)
            selection_feature_index_1 = [x - 1 for x in selection_feature_index]
            X_test = pddtest.values[:, selection_feature_index_1]

            prediction = pse_clf_sc.predict(X_test)
            if prediction[0] == 1:
                n_base_list.append(n_base + 1)
    seq = str(name) + ' ' + sequence + word1 + str(n_base_list) + word2 + '\n'
    return seq


def prediction_pseudourdine_MM(name, sequence):
    word1 = '       The U site at position '
    word2 = ' is pseudouridine!'
    PNlist = [[-0.032, -0.098, -0.005, -0.026, -0.017, -0.017, -0.023, -0.064, -0.076, -0.104, 0.0, 0.225, -0.108, 0.059, -0.004, 0.004, -0.027, -0.072, -0.034, -0.029, -0.034], [0.017, -0.002, -0.013, -0.011, 0.015, 0.0, 0.051, -0.019, 0.067, 0.0, 0.0, 0.106, 0.112, -0.019, 0.011, 0.038, 0.017, 0.057, 0.045, -0.02, 0.045], [0.004, 0.074, 0.03, 0.049, -0.006, 0.034, 0.013, 0.042, -0.045, 0.046, 0.0, -0.136, 0.144, -0.002, -0.015, -0.012, 0.015, 0.023, -0.002, 0.038, 0.03], [0.01, 0.026, -0.012, -0.013, 0.008, -0.017, -0.041, 0.041, 0.053, 0.057, 0.0, -0.195, -0.149, -0.038, 0.008, -0.03, -0.004, -0.008, -0.009, 0.01, -0.04]]
    # ------------------------------------------------------------
    PDNlist = [[-0.034, -0.034, -0.025, -0.027, 0.0, -0.023, -0.004, -0.068, -0.058, 0.0, 0.0, -0.019, -0.005, 0.033, 0.013, 0.0, -0.011, -0.002, -0.026, -0.006], [-0.025, -0.032, -0.002, -0.013, -0.002, -0.006, -0.015, 0.041, 0.004, -0.104, 0.0, 0.121, -0.032, 0.01, -0.002, 0.004, -0.011, -0.017, -0.017, 0.0], [0.026, -0.019, 0.013, 0.008, 0.002, 0.017, -0.008, -0.026, -0.008, 0.0, 0.0, 0.117, -0.027, 0.002, -0.013, -0.007, 0.003, -0.023, -0.002, 0.006], [0.002, -0.013, 0.011, 0.006, -0.017, -0.005, 0.005, -0.011, -0.015, 0.0, 0.0, 0.007, -0.044, 0.013, -0.002, 0.006, -0.008, -0.03, 0.01, -0.03], [-0.015, -0.021, -0.009, -0.008, -0.017, -0.015, 0.0, -0.019, -0.002, 0.0, 0.225, 0.01, 0.023, -0.03, -0.006, -0.013, -0.023, 0.002, -0.002, -0.024], [-0.013, 0.006, -0.014, -0.008, 0.015, 0.017, 0.0, -0.017, -0.01, 0.0, 0.106, 0.06, 0.032, -0.005, 0.021, 0.014, 0.022, 0.017, 0.006, 0.007], [0.017, 0.032, 0.006, -0.002, 0.004, 0.002, 0.027, 0.002, 0.036, 0.0, -0.136, 0.083, 0.017, -0.007, -0.002, 0.02, 0.013, 0.028, 0.019, 0.002], [0.027, -0.019, 0.004, 0.008, 0.013, -0.004, 0.023, 0.014, 0.045, 0.0, -0.195, -0.047, 0.04, 0.021, -0.003, 0.017, 0.007, 0.011, 0.021, -0.005], [-0.032, 0.032, 0.017, 0.007, -0.004, 0.013, -0.023, -0.004, -0.021, 0.0, 0.0, -0.039, 0.074, 0.004, -0.027, -0.03, -0.03, -0.021, -0.015, 0.015], [0.007, 0.015, 0.013, 0.025, -0.006, 0.036, -0.004, 0.036, -0.011, 0.046, 0.0, -0.049, 0.019, -0.002, 0.004, 0.008, 0.03, 0.038, 0.004, 0.013], [0.027, 0.002, 0.01, 0.002, -0.007, -0.008, 0.028, -0.019, -0.017, 0.0, 0.0, -0.031, 0.031, -0.015, 0.003, 0.015, 0.0, -0.012, 0.004, 0.005], [0.002, 0.025, -0.01, 0.015, 0.01, -0.007, 0.012, 0.029, 0.004, 0.0, 0.0, -0.017, 0.019, 0.01, 0.006, -0.006, 0.015, 0.019, 0.004, 0.006], [-0.017, 0.019, -0.009, 0.013, 0.004, 0.002, -0.036, 0.015, -0.024, 0.0, 0.0, -0.061, -0.034, -0.013, 0.025, 0.015, -0.009, -0.013, 0.013, -0.019], [0.03, -0.002, -0.007, 0.011, -0.006, 0.004, 0.0, 0.008, 0.017, 0.057, 0.0, -0.019, -0.038, 0.006, 0.014, -0.011, 0.017, 0.006, -0.013, 0.026], [0.004, 0.014, 0.019, -0.015, 0.034, 0.003, -0.004, -0.002, 0.036, 0.0, 0.0, -0.023, -0.023, 0.004, 0.0, -0.013, 0.009, 0.006, 0.017, 0.017], [-0.006, -0.006, -0.017, -0.022, -0.023, -0.025, 0.0, 0.019, 0.023, 0.0, 0.0, -0.091, -0.053, -0.036, -0.032, -0.021, -0.021, -0.008, -0.025, -0.013]]
    # -------------------------------------------------------------
    PTNlist = [[-0.015, -0.03, -0.023, -0.028, -0.014, -0.002, -0.019, -0.036, 0.0, 0.0, 0.0, 0.008, 0.004, 0.026, -0.008, 0.0, -0.002, -0.005, -0.011], [-0.034, 0.005, 0.0, 0.017, -0.013, -0.029, 0.013, 0.0, -0.114, 0.0, 0.0, -0.013, -0.004, -0.009, 0.047, 0.004, -0.005, -0.013, 0.004], [-0.004, -0.004, -0.005, -0.004, 0.013, -0.017, 0.021, -0.013, 0.0, 0.0, 0.0, -0.004, -0.008, 0.013, -0.021, 0.004, -0.008, 0.0, -0.013], [0.0, -0.008, 0.0, -0.013, 0.03, 0.005, -0.004, -0.051, 0.0, 0.0, 0.0, -0.038, -0.004, 0.013, 0.017, -0.009, -0.005, 0.017, -0.022], [-0.038, -0.017, 0.004, -0.029, -0.012, -0.008, 0.0, 0.009, 0.0, 0.021, 0.0, 0.038, -0.017, 0.017, -0.021, -0.021, -0.013, -0.03, -0.034], [0.0, -0.038, -0.026, 0.017, 0.004, -0.004, 0.0, 0.026, 0.009, -0.017, 0.0, 0.064, -0.012, -0.013, -0.004, 0.012, -0.009, -0.017, -0.009], [0.0, 0.021, 0.025, 0.0, -0.012, -0.013, -0.012, 0.012, 0.0, -0.059, 0.0, 0.064, -0.021, -0.005, 0.021, 0.005, 0.017, -0.008, 0.005], [-0.012, -0.03, -0.008, -0.013, 0.017, 0.012, -0.017, 0.034, 0.0, -0.152, 0.0, 0.076, -0.013, 0.022, 0.0, 0.013, -0.017, 0.021, 0.004], [0.002, -0.034, -0.03, -0.022, -0.019, -0.002, -0.021, -0.053, 0.0, 0.0, 0.0, 0.059, -0.013, 0.022, -0.039, -0.032, -0.01, -0.015, -0.005], [0.004, -0.013, 0.013, 0.002, 0.009, 0.0, 0.004, -0.007, -0.008, 0.0, 0.0, 0.011, -0.002, 0.005, -0.004, 0.01, 0.002, -0.009, 0.009], [0.003, 0.002, 0.011, 0.0, -0.002, 0.012, -0.014, -0.006, 0.0, 0.0, 0.0, 0.043, -0.011, -0.004, 0.026, 0.007, -0.008, -0.002, -0.019], [0.002, -0.004, -0.004, 0.0, 0.0, 0.004, 0.004, 0.004, 0.0, 0.0, 0.0, 0.013, 0.002, 0.007, -0.004, 0.009, 0.017, -0.002, 0.002], [0.002, 0.0, -0.003, 0.007, 0.004, -0.015, 0.01, -0.022, 0.0, 0.0, 0.0, 0.004, -0.002, -0.003, 0.011, -0.006, -0.015, -0.017, -0.015], [-0.002, -0.004, 0.009, -0.007, 0.007, 0.0, 0.0, 0.002, -0.015, 0.0, 0.0, -0.003, -0.006, 0.008, 0.0, 0.017, 0.002, -0.007, 0.006], [0.0, 0.013, 0.013, 0.021, -0.002, 0.0, 0.0, 0.015, 0.0, 0.0, 0.0, 0.003, -0.009, 0.013, -0.002, 0.006, 0.008, 0.007, 0.01], [0.002, -0.021, -0.008, -0.015, -0.025, 0.011, -0.006, -0.006, 0.0, 0.0, 0.0, 0.002, -0.027, -0.006, -0.011, -0.01, -0.004, -0.013, 0.008], [0.0, -0.015, -0.002, -0.002, -0.002, -0.002, -0.022, -0.006, 0.0, 0.0, -0.019, 0.017, 0.015, -0.026, 0.002, -0.007, 0.0, -0.007, 0.006], [-0.022, -0.005, 0.0, -0.004, -0.005, -0.013, 0.034, -0.017, -0.004, 0.0, 0.242, -0.013, 0.0, -0.008, -0.034, -0.017, -0.013, 0.004, -0.013], [-0.004, 0.004, 0.012, 0.0, 0.009, -0.021, 0.017, -0.013, 0.0, 0.0, 0.233, -0.004, 0.004, 0.0, 0.013, 0.0, -0.021, 0.004, -0.004], [-0.004, -0.012, -0.026, -0.008, -0.034, 0.008, -0.008, 0.004, 0.0, 0.0, 0.013, 0.004, 0.013, 0.0, 0.004, 0.004, -0.013, 0.008, 0.0], [-0.013, 0.004, 0.008, -0.004, -0.009, -0.008, -0.009, -0.009, 0.0, 0.093, 0.021, 0.038, -0.017, 0.0, 0.013, -0.013, 0.021, 0.008, -0.009], [-0.038, -0.013, -0.022, -0.013, 0.03, 0.013, -0.025, -0.055, -0.022, 0.055, 0.118, 0.026, 0.038, 0.017, 0.025, 0.017, 0.008, -0.004, 0.033], [0.034, 0.017, -0.017, 0.008, 0.008, 0.017, 0.009, 0.004, 0.0, -0.085, 0.165, 0.026, 0.009, -0.009, 0.013, 0.034, 0.013, 0.005, -0.004], [-0.009, 0.004, 0.0, -0.008, 0.0, 0.013, 0.025, 0.026, 0.0, -0.064, -0.093, 0.03, 0.034, -0.017, -0.008, -0.009, 0.0, 0.025, -0.009], [0.006, 0.0, 0.002, -0.019, -0.004, -0.012, -0.017, 0.002, 0.0, 0.0, -0.057, 0.055, 0.03, -0.032, 0.006, -0.004, 0.002, -0.011, 0.01], [0.0, 0.011, 0.006, 0.004, 0.01, 0.002, 0.013, 0.005, 0.036, 0.0, -0.049, 0.021, -0.004, -0.009, -0.004, 0.017, 0.017, 0.01, 0.0], [0.006, 0.006, -0.013, 0.006, -0.002, 0.01, 0.006, -0.008, 0.0, 0.0, -0.031, 0.011, 0.006, 0.009, 0.004, 0.0, -0.004, 0.024, 0.012], [0.004, 0.0, 0.009, 0.004, -0.002, 0.0, 0.004, -0.002, 0.0, 0.0, -0.017, 0.013, 0.0, 0.0, -0.006, 0.0, -0.002, -0.002, 0.002], [0.017, -0.017, 0.01, -0.005, -0.002, -0.013, 0.0, 0.004, 0.0, 0.0, -0.061, -0.011, 0.007, 0.015, 0.005, 0.015, -0.002, 0.006, 0.002], [-0.008, -0.002, -0.004, -0.002, 0.0, 0.006, 0.008, -0.004, 0.045, 0.0, -0.019, -0.017, 0.023, 0.019, 0.0, -0.003, 0.007, 0.002, 0.017], [0.004, 0.0, -0.006, 0.006, 0.007, -0.004, 0.002, 0.004, 0.0, 0.0, -0.023, -0.007, 0.007, -0.008, -0.007, -0.002, 0.0, 0.013, 0.012], [0.015, 0.0, 0.005, 0.009, 0.009, 0.006, 0.013, 0.011, 0.0, 0.0, -0.091, -0.013, 0.005, -0.005, 0.0, 0.006, 0.002, -0.011, -0.011], [-0.01, 0.0, 0.008, 0.013, 0.0, -0.002, -0.011, -0.015, 0.0, 0.0, 0.0, -0.01, 0.036, 0.013, -0.011, -0.004, -0.013, -0.004, -0.002], [-0.021, 0.008, -0.009, -0.008, 0.004, 0.017, 0.042, 0.009, -0.043, 0.0, 0.0, -0.009, 0.038, 0.008, -0.022, -0.021, -0.017, -0.013, 0.0], [-0.012, 0.012, 0.009, 0.008, 0.0, 0.009, -0.064, -0.009, 0.0, 0.0, 0.0, -0.034, -0.004, -0.034, -0.008, -0.03, -0.004, -0.017, 0.0], [-0.008, 0.043, 0.017, -0.013, -0.012, 0.004, -0.005, 0.021, 0.0, 0.0, 0.0, -0.012, 0.043, 0.008, -0.004, 0.0, -0.013, -0.004, -0.026], [0.004, 0.017, -0.013, 0.013, -0.005, 0.004, -0.009, -0.008, 0.0, 0.153, 0.0, -0.017, 0.0, -0.013, -0.013, 0.017, -0.013, 0.025, -0.004], [0.013, 0.0, 0.03, 0.004, 0.012, 0.013, -0.021, 0.008, -0.021, 0.119, 0.0, -0.009, 0.013, 0.017, 0.009, 0.005, 0.008, 0.047, 0.021], [0.0, -0.005, -0.013, 0.0, -0.004, 0.03, 0.009, 0.047, 0.0, -0.106, 0.0, -0.047, 0.004, 0.0, 0.004, -0.005, 0.012, 0.004, -0.004], [-0.005, 0.017, 0.021, 0.034, -0.017, 0.026, 0.013, 0.025, 0.0, -0.072, 0.0, -0.026, 0.021, -0.009, 0.008, 0.0, 0.051, 0.0, -0.004], [-0.006, 0.004, 0.002, 0.004, 0.008, -0.009, -0.013, -0.021, 0.0, 0.0, 0.0, -0.014, 0.056, 0.007, -0.017, 0.006, -0.017, -0.009, -0.012], [0.006, 0.011, 0.008, 0.008, 0.005, -0.008, 0.008, -0.006, -0.017, 0.0, 0.0, -0.015, 0.009, 0.0, 0.011, 0.008, 0.015, 0.004, 0.01], [0.0, -0.006, 0.002, 0.0, -0.013, 0.004, 0.004, -0.004, 0.0, 0.0, 0.0, -0.01, -0.004, -0.006, -0.003, -0.007, -0.015, -0.015, 0.002], [0.017, -0.007, 0.006, 0.002, -0.007, 0.003, 0.017, -0.002, 0.0, 0.0, 0.0, -0.002, 0.009, -0.002, 0.0, 0.002, 0.004, 0.002, 0.003], [0.004, 0.013, 0.0, 0.002, 0.002, 0.004, 0.004, -0.002, 0.0, 0.0, 0.0, -0.004, -0.004, 0.009, 0.004, -0.004, 0.004, 0.009, 0.002], [0.0, 0.002, 0.006, 0.002, 0.0, 0.004, 0.0, 0.006, 0.004, 0.0, 0.0, -0.002, 0.0, -0.002, -0.002, -0.002, 0.0, 0.004, 0.002], [0.002, 0.002, -0.008, 0.009, -0.002, -0.004, -0.002, 0.017, 0.0, 0.0, 0.0, -0.004, 0.011, 0.0, 0.0, 0.0, 0.007, 0.0, 0.0], [-0.004, 0.009, -0.008, 0.002, 0.011, -0.011, 0.011, 0.009, 0.0, 0.0, 0.0, -0.006, 0.013, 0.004, 0.004, 0.0, 0.004, 0.007, 0.0], [-0.009, 0.019, -0.011, 0.017, -0.007, 0.002, -0.017, 0.0, 0.0, 0.0, 0.0, -0.019, -0.022, 0.0, 0.017, 0.0, 0.012, -0.01, 0.0], [0.013, -0.013, -0.017, -0.009, 0.0, -0.004, -0.009, 0.017, -0.046, 0.0, 0.0, -0.03, -0.013, 0.004, 0.017, 0.012, 0.0, -0.013, 0.009], [-0.017, 0.013, 0.0, 0.0, 0.013, 0.013, -0.026, 0.017, 0.0, 0.0, 0.0, -0.013, 0.012, -0.004, 0.004, 0.03, -0.013, 0.009, 0.03], [-0.013, 0.0, 0.021, 0.0, 0.008, -0.008, -0.005, -0.004, 0.0, 0.0, 0.0, -0.043, -0.025, -0.025, -0.005, -0.013, -0.03, 0.0, -0.013], [0.004, -0.022, -0.017, -0.013, -0.005, 0.013, -0.021, 0.004, 0.0, 0.183, 0.0, -0.013, -0.026, -0.017, -0.005, -0.03, 0.009, -0.009, 0.0], [0.039, 0.022, 0.0, 0.021, -0.012, -0.021, 0.013, 0.0, 0.034, 0.055, 0.0, -0.017, -0.047, 0.021, 0.0, 0.009, 0.026, -0.012, -0.034], [0.03, -0.022, 0.0, 0.0, 0.012, 0.021, 0.0, 0.009, 0.0, -0.021, 0.0, -0.009, -0.004, 0.009, 0.0, -0.008, 0.013, 0.039, 0.009], [-0.013, 0.017, 0.004, 0.013, -0.008, -0.004, 0.009, 0.004, 0.0, -0.102, 0.0, 0.0, 0.0, 0.0, 0.034, 0.008, -0.013, -0.004, 0.0], [-0.004, 0.021, 0.004, 0.032, 0.004, -0.004, -0.021, -0.007, 0.0, 0.0, 0.0, -0.03, -0.034, -0.011, 0.019, -0.01, 0.002, -0.006, 0.014], [0.005, 0.005, -0.002, -0.022, 0.013, 0.002, 0.01, -0.003, 0.036, 0.0, 0.0, 0.002, -0.005, 0.009, 0.006, -0.006, 0.004, -0.002, -0.007], [-0.006, 0.009, 0.002, -0.013, 0.009, 0.0, -0.015, 0.002, 0.0, 0.0, 0.0, -0.011, -0.007, 0.004, -0.012, 0.0, 0.014, -0.002, 0.009], [0.002, 0.0, 0.004, 0.004, 0.002, 0.006, 0.005, 0.004, 0.0, 0.0, 0.0, -0.004, 0.0, 0.002, 0.004, 0.004, 0.0, 0.007, 0.0], [-0.005, -0.005, 0.004, 0.0, -0.002, -0.012, 0.0, -0.004, 0.0, 0.0, 0.0, -0.023, -0.012, 0.004, -0.004, -0.013, 0.0, 0.015, -0.008], [0.008, -0.002, 0.0, 0.0, -0.002, -0.011, 0.0, 0.013, 0.023, 0.0, 0.0, -0.017, -0.011, -0.01, -0.009, 0.005, -0.002, -0.012, 0.0], [0.009, 0.004, -0.013, -0.003, 0.0, 0.004, -0.002, 0.0, 0.0, 0.0, 0.0, -0.015, -0.004, -0.005, -0.004, 0.004, -0.008, -0.002, -0.006], [-0.019, -0.004, -0.009, -0.019, -0.019, -0.007, 0.002, 0.01, 0.0, 0.0, 0.0, -0.036, -0.026, -0.025, -0.015, -0.017, -0.011, -0.008, -0.011]]
    # -------------------------------------------------------------
    selection_feature_index = [53, 2, 10, 12, 48, 59, 13, 32, 56, 33, 45, 52, 43, 51, 54, 57, 60, 49, 42, 46,
                               58, 55, 34, 44, 29, 47, 23, 9, 31, 21, 22, 39, 28, 30, 50, 18, 26, 41]
    pse_clf_mm = load('pse_clf_mm.joblib')
    # --------------------------------------------------------------
    n_base = 9
    n_base_list = []
    for base in sequence.strip()[10:-10]:
        n_base += 1
        DspecificP = [None] * 20
        specificP = [None] * 21
        tspecific = [None] * 19
        file_inter = open('inter_use.txt', 'w')
        if base == 'U':
            new_line = sequence.strip()[n_base - 10:n_base + 11]
            new_length = len(new_line.strip())
            for j in range(new_length):
                if new_line[j] == 'A':
                    specificP[j] = PNlist[0][j]
                elif new_line[j] == 'U':
                    specificP[j] = PNlist[1][j]
                elif new_line[j] == 'C':
                    specificP[j] = PNlist[2][j]
                elif new_line[j] == 'G':
                    specificP[j] = PNlist[3][j]
            for j in range(new_length - 1):
                if new_line[j:j + 2] == 'AA':
                    DspecificP[j] = PDNlist[0][j]
                elif new_line[j:j + 2] == 'AU':
                    DspecificP[j] = PDNlist[1][j]
                elif new_line[j:j + 2] == 'AC':
                    DspecificP[j] = PDNlist[2][j]
                elif new_line[j:j + 2] == 'AG':
                    DspecificP[j] = PDNlist[3][j]
                elif new_line[j:j + 2] == 'UA':
                    DspecificP[j] = PDNlist[4][j]
                elif new_line[j:j + 2] == 'UU':
                    DspecificP[j] = PDNlist[5][j]
                elif new_line[j:j + 2] == 'UC':
                    DspecificP[j] = PDNlist[6][j]
                elif new_line[j:j + 2] == 'UG':
                    DspecificP[j] = PDNlist[7][j]
                elif new_line[j:j + 2] == 'CA':
                    DspecificP[j] = PDNlist[8][j]
                elif new_line[j:j + 2] == 'CU':
                    DspecificP[j] = PDNlist[9][j]
                elif new_line[j:j + 2] == 'CC':
                    DspecificP[j] = PDNlist[10][j]
                elif new_line[j:j + 2] == 'CG':
                    DspecificP[j] = PDNlist[11][j]
                elif new_line[j:j + 2] == 'GA':
                    DspecificP[j] = PDNlist[12][j]
                elif new_line[j:j + 2] == 'GU':
                    DspecificP[j] = PDNlist[13][j]
                elif new_line[j:j + 2] == 'GC':
                    DspecificP[j] = PDNlist[14][j]
                elif new_line[j:j + 2] == 'GG':
                    DspecificP[j] = PDNlist[15][j]
            for j in range(new_length - 2):
                if new_line[j:j + 3] == 'AAA':
                    tspecific[j] = PTNlist[0][j]
                elif new_line[j:j + 3] == 'AAU':
                    tspecific[j] = PTNlist[1][j]
                elif new_line[j:j + 3] == 'AAC':
                    tspecific[j] = PTNlist[2][j]
                elif new_line[j:j + 3] == 'AAG':
                    tspecific[j] = PTNlist[3][j]
                elif new_line[j:j + 3] == 'AUA':
                    tspecific[j] = PTNlist[4][j]
                elif new_line[j:j + 3] == 'AUU':
                    tspecific[j] = PTNlist[5][j]
                elif new_line[j:j + 3] == 'AUC':
                    tspecific[j] = PTNlist[6][j]
                elif new_line[j:j + 3] == 'AUG':
                    tspecific[j] = PTNlist[7][j]
                elif new_line[j:j + 3] == 'ACA':
                    tspecific[j] = PTNlist[8][j]
                elif new_line[j:j + 3] == 'ACU':
                    tspecific[j] = PTNlist[9][j]
                elif new_line[j:j + 3] == 'ACC':
                    tspecific[j] = PTNlist[10][j]
                elif new_line[j:j + 3] == 'ACG':
                    tspecific[j] = PTNlist[11][j]
                elif new_line[j:j + 3] == 'AGA':
                    tspecific[j] = PTNlist[12][j]
                elif new_line[j:j + 3] == 'AGU':
                    tspecific[j] = PTNlist[13][j]
                elif new_line[j:j + 3] == 'AGC':
                    tspecific[j] = PTNlist[14][j]
                elif new_line[j:j + 3] == 'AGG':
                    tspecific[j] = PTNlist[15][j]
                elif new_line[j:j + 3] == 'UAA':
                    tspecific[j] = PTNlist[16][j]
                elif new_line[j:j + 3] == 'UAU':
                    tspecific[j] = PTNlist[17][j]
                elif new_line[j:j + 3] == 'UAC':
                    tspecific[j] = PTNlist[18][j]
                elif new_line[j:j + 3] == 'UAG':
                    tspecific[j] = PTNlist[19][j]
                elif new_line[j:j + 3] == 'UUA':
                    tspecific[j] = PTNlist[20][j]
                elif new_line[j:j + 3] == 'UUU':
                    tspecific[j] = PTNlist[21][j]
                elif new_line[j:j + 3] == 'UUC':
                    tspecific[j] = PTNlist[22][j]
                elif new_line[j:j + 3] == 'UUG':
                    tspecific[j] = PTNlist[23][j]
                elif new_line[j:j + 3] == 'UCA':
                    tspecific[j] = PTNlist[24][j]
                elif new_line[j:j + 3] == 'UCU':
                    tspecific[j] = PTNlist[25][j]
                elif new_line[j:j + 3] == 'UCC':
                    tspecific[j] = PTNlist[26][j]
                elif new_line[j:j + 3] == 'UCG':
                    tspecific[j] = PTNlist[27][j]
                elif new_line[j:j + 3] == 'UGA':
                    tspecific[j] = PTNlist[28][j]
                elif new_line[j:j + 3] == 'UGU':
                    tspecific[j] = PTNlist[29][j]
                elif new_line[j:j + 3] == 'UGC':
                    tspecific[j] = PTNlist[30][j]
                elif new_line[j:j + 3] == 'UGG':
                    tspecific[j] = PTNlist[31][j]
                elif new_line[j:j + 3] == 'CAA':
                    tspecific[j] = PTNlist[32][j]
                elif new_line[j:j + 3] == 'CAU':
                    tspecific[j] = PTNlist[33][j]
                elif new_line[j:j + 3] == 'CAC':
                    tspecific[j] = PTNlist[34][j]
                elif new_line[j:j + 3] == 'CAG':
                    tspecific[j] = PTNlist[35][j]
                elif new_line[j:j + 3] == 'CUA':
                    tspecific[j] = PTNlist[36][j]
                elif new_line[j:j + 3] == 'CUU':
                    tspecific[j] = PTNlist[37][j]
                elif new_line[j:j + 3] == 'CUC':
                    tspecific[j] = PTNlist[38][j]
                elif new_line[j:j + 3] == 'CUG':
                    tspecific[j] = PTNlist[39][j]
                elif new_line[j:j + 3] == 'CCA':
                    tspecific[j] = PTNlist[40][j]
                elif new_line[j:j + 3] == 'CCU':
                    tspecific[j] = PTNlist[41][j]
                elif new_line[j:j + 3] == 'CCC':
                    tspecific[j] = PTNlist[42][j]
                elif new_line[j:j + 3] == 'CCG':
                    tspecific[j] = PTNlist[43][j]
                elif new_line[j:j + 3] == 'CGA':
                    tspecific[j] = PTNlist[44][j]
                elif new_line[j:j + 3] == 'CGU':
                    tspecific[j] = PTNlist[45][j]
                elif new_line[j:j + 3] == 'CGC':
                    tspecific[j] = PTNlist[46][j]
                elif new_line[j:j + 3] == 'CGG':
                    tspecific[j] = PTNlist[47][j]
                elif new_line[j:j + 3] == 'GAA':
                    tspecific[j] = PTNlist[48][j]
                elif new_line[j:j + 3] == 'GAU':
                    tspecific[j] = PTNlist[49][j]
                elif new_line[j:j + 3] == 'GAC':
                    tspecific[j] = PTNlist[50][j]
                elif new_line[j:j + 3] == 'GAG':
                    tspecific[j] = PTNlist[51][j]
                elif new_line[j:j + 3] == 'GUA':
                    tspecific[j] = PTNlist[52][j]
                elif new_line[j:j + 3] == 'GUU':
                    tspecific[j] = PTNlist[53][j]
                elif new_line[j:j + 3] == 'GUC':
                    tspecific[j] = PTNlist[54][j]
                elif new_line[j:j + 3] == 'GUG':
                    tspecific[j] = PTNlist[55][j]
                elif new_line[j:j + 3] == 'GCA':
                    tspecific[j] = PTNlist[56][j]
                elif new_line[j:j + 3] == 'GCU':
                    tspecific[j] = PTNlist[57][j]
                elif new_line[j:j + 3] == 'GCC':
                    tspecific[j] = PTNlist[58][j]
                elif new_line[j:j + 3] == 'GCG':
                    tspecific[j] = PTNlist[59][j]
                elif new_line[j:j + 3] == 'GGA':
                    tspecific[j] = PTNlist[60][j]
                elif new_line[j:j + 3] == 'GGU':
                    tspecific[j] = PTNlist[61][j]
                elif new_line[j:j + 3] == 'GGC':
                    tspecific[j] = PTNlist[62][j]
                elif new_line[j:j + 3] == 'GGG':
                    tspecific[j] = PTNlist[63][j]
            print(*specificP, *DspecificP, *tspecific, file=file_inter)
            file_inter.close()
            pddtest = pd.read_csv("inter_use.txt", sep=' ', header=None)
            selection_feature_index_1 = [x - 1 for x in selection_feature_index]
            X_test = pddtest.values[:, selection_feature_index_1]
            prediction = pse_clf_mm.predict(X_test)
            if prediction[0] == 1:
                n_base_list.append(n_base + 1)
    seq = str(name) + ' ' + sequence + word1 + str(n_base_list) + word2 + '\n'
    return seq


def main(argv):
    inputfile = ''
    outputfile = ''
    sepice = 0
    try:
        opts, args = getopt.getopt(argv, "hi:o:s:", ["ifile=", "ofile=", "sepice="])
    except getopt.GetoptError:
        print('test.py -i <inputfile> -o <outputfile>')
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            print('test.py -i <inputfile> -o <outputfile> -s< 0 stand for H. sapiens. 1 stand for S. cerevisiae. '
                  '2 stand for M. musculus>')
            sys.exit()
        elif opt in ("-i", "--ifile"):
            inputfile = arg
        elif opt in ("-o", "--ofile"):
            outputfile = arg
        elif opt in ("-s", "--sepice"):
            sepice = int(arg)
    if inputfile == '':
        print('Please enter the correct format reference README, or type in -h for help')
    if outputfile == '':
        print('Please enter the correct format reference README, or type in -h for help')
    if sepice == '':
        print('Please enter the correct format reference README, or type in -h for help')
    n_s_dict = set_dict(inputfile)
    file = open(outputfile, 'a')
    if sepice == 0:
        for key in n_s_dict.keys():
            result = prediction_pseudourdine_human(key, n_s_dict[key])
            print(*result, file=file, sep='', end='')
    elif sepice == 1:
        for key in n_s_dict.keys():
            result = prediction_pseudourdine_SC(key, n_s_dict[key])
            print(*result, file=file, sep='', end='')
    elif sepice == 2:
        for key in n_s_dict.keys():
            result = prediction_pseudourdine_MM(key, n_s_dict[key])
            print(*result, file=file, sep='', end='')


if __name__ == "__main__":
    main(sys.argv[1:])
    print('successed')
